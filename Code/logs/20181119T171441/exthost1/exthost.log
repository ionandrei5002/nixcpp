[2018-11-19 17:14:43.301] [exthost] [info] extension host started
[2018-11-19 17:14:43.305] [exthost] [trace] initData {"commit":"5f24c93878bd4bc645a4a17c620e2487b11005f9","parentPid":74,"environment":{"isExtensionDevelopmentDebug":false,"appRoot":{"$mid":1,"path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app","scheme":"file"},"appSettingsHome":{"$mid":1,"path":"/home/andrei/.config/Code/User","scheme":"file"}},"workspace":{"configuration":null,"folders":[{"uri":{"$mid":1,"fsPath":"/home/andrei/project","external":"file:///home/andrei/project","path":"/home/andrei/project","scheme":"file"},"name":"project","index":0}],"id":"5f9e1cb120585fb97cc1aa2175a45f99","name":"project"},"extensions":[{"name":"bat","displayName":"Windows Bat Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Windows batch files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js mmims/language-batchfile grammars/batchfile.cson ./syntaxes/batchfile.tmLanguage.json"},"contributes":{"languages":[{"id":"bat","extensions":[".bat",".cmd"],"aliases":["Batch","bat"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"bat","scopeName":"source.batchfile","path":"./syntaxes/batchfile.tmLanguage.json"}],"snippets":[{"language":"bat","path":"./snippets/batchfile.snippets.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.bat","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/bat","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/bat","scheme":"file"}},{"name":"clojure","displayName":"Clojure Language Basics","description":"Provides syntax highlighting and bracket matching in Clojure files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-clojure grammars/clojure.cson ./syntaxes/clojure.tmLanguage.json"},"contributes":{"languages":[{"id":"clojure","aliases":["Clojure","clojure"],"extensions":[".clj",".cljs",".cljc",".cljx",".clojure",".edn"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"clojure","scopeName":"source.clojure","path":"./syntaxes/clojure.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.clojure","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/clojure","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/clojure","scheme":"file"}},{"name":"coffeescript","displayName":"CoffeeScript Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in CoffeeScript files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-coffee-script grammars/coffeescript.cson ./syntaxes/coffeescript.tmLanguage.json"},"contributes":{"languages":[{"id":"coffeescript","extensions":[".coffee",".cson"],"aliases":["CoffeeScript","coffeescript","coffee"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"coffeescript","scopeName":"source.coffee","path":"./syntaxes/coffeescript.tmLanguage.json"}],"breakpoints":[{"language":"coffeescript"}],"snippets":[{"language":"coffeescript","path":"./snippets/coffeescript.snippets.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.coffeescript","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/coffeescript","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/coffeescript","scheme":"file"}},{"name":"configuration-editing","displayName":"Configuration Editing","description":"Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"^1.0.0"},"activationEvents":["onLanguage:json","onLanguage:jsonc"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/configuration-editing/dist/extension","scripts":{"compile":"gulp compile-extension:configuration-editing","watch":"gulp watch-extension:configuration-editing"},"dependencies":{"jsonc-parser":"2.0.2","vscode-nls":"^4.0.0"},"contributes":{"languages":[{"id":"jsonc","extensions":[".code-workspace","language-configuration.json","icon-theme.json","color-theme.json",".code-snippets"],"filenames":["settings.json","launch.json","tasks.json","keybindings.json","extensions.json"]}],"jsonValidation":[{"fileMatch":"vscode://defaultsettings/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"%APP_SETTINGS_HOME%/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"vscode://defaultsettings/settings.json","url":"vscode://schemas/settings/default"},{"fileMatch":"%APP_SETTINGS_HOME%/settings.json","url":"vscode://schemas/settings/user"},{"fileMatch":"%APP_WORKSPACES_HOME%/*/workspace.json","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"**/*.code-workspace","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"%APP_SETTINGS_HOME%/locale.json","url":"vscode://schemas/locale"},{"fileMatch":"/.vscode/settings.json","url":"vscode://schemas/settings/folder"},{"fileMatch":"/.vscode/launch.json","url":"vscode://schemas/launch"},{"fileMatch":"/.vscode/tasks.json","url":"vscode://schemas/tasks"},{"fileMatch":"%APP_SETTINGS_HOME%/snippets/*.json","url":"vscode://schemas/snippets"},{"fileMatch":"**/*.code-snippets","url":"vscode://schemas/global-snippets"},{"fileMatch":"/.vscode/extensions.json","url":"vscode://schemas/extensions"}]},"devDependencies":{"@types/node":"^8.10.25"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.configuration-editing","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/configuration-editing","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/configuration-editing","scheme":"file"}},{"name":"cpp","displayName":"C/C++ Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in C/C++ files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"c","extensions":[".c"],"aliases":["C","c"],"configuration":"./language-configuration.json"},{"id":"cpp","extensions":[".cpp",".cc",".cxx",".hpp",".hh",".hxx",".h",".ino",".inl",".ipp"],"aliases":["C++","Cpp","cpp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"c","scopeName":"source.c","path":"./syntaxes/c.tmLanguage.json"},{"language":"cpp","scopeName":"source.cpp","path":"./syntaxes/cpp.tmLanguage.json"},{"scopeName":"source.c.platform","path":"./syntaxes/platform.tmLanguage.json"}],"snippets":[{"language":"c","path":"./snippets/c.json"},{"language":"cpp","path":"./snippets/cpp.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.cpp","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/cpp","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/cpp","scheme":"file"}},{"name":"csharp","displayName":"C# Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in C# files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js dotnet/csharp-tmLanguage grammars/csharp.tmLanguage ./syntaxes/csharp.tmLanguage.json"},"contributes":{"languages":[{"id":"csharp","extensions":[".cs",".csx",".cake"],"aliases":["C#","csharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"csharp","scopeName":"source.cs","path":"./syntaxes/csharp.tmLanguage.json"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.csharp","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/csharp","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/csharp","scheme":"file"}},{"name":"css","displayName":"CSS Language Basics","description":"Provides syntax highlighting and bracket matching for CSS, LESS and SCSS files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js octref/language-css grammars/css.cson ./syntaxes/css.tmLanguage.json"},"contributes":{"languages":[{"id":"css","aliases":["CSS","css"],"extensions":[".css"],"mimetypes":["text/css"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"css","scopeName":"source.css","path":"./syntaxes/css.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.css","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css","scheme":"file"}},{"name":"css-language-features","displayName":"CSS Language Features","description":"Provides rich language support for CSS, LESS and SCSS files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"icon":"icons/css.png","activationEvents":["onLanguage:css","onLanguage:less","onLanguage:scss","onCommand:_css.applyCodeAction"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css-language-features/client/dist/cssMain","scripts":{"compile":"gulp compile-extension:css-language-features-client compile-extension:css-language-features-server","watch":"gulp watch-extension:css-language-features-client watch-extension:css-language-features-server","test":"mocha","postinstall":"cd server && yarn install","install-client-next":"yarn add vscode-languageclient@next"},"categories":["Programming Languages"],"contributes":{"configuration":[{"order":22,"id":"css","title":"CSS","properties":{"css.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"css.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Enables or disables color decorators.","deprecationMessage":"The setting `css.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."},"css.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"css.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"css.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"css.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"css.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"css.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"css.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"css.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"css.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"css.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of three or six hex numbers."},"css.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"css.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"css.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"css.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"css.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"css.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"css.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"css.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"css.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."},"css.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown at-rule."},"css.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the CSS language server."}}},{"id":"scss","order":24,"title":"SCSS (Sass)","properties":{"scss.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"scss.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Enables or disables color decorators.","deprecationMessage":"The setting `scss.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."},"scss.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"scss.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"scss.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"scss.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"scss.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"scss.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"scss.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"scss.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"scss.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"scss.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of three or six hex numbers."},"scss.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"scss.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"scss.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"scss.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"scss.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"scss.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"scss.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"scss.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"scss.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."}}},{"id":"less","order":23,"type":"object","title":"LESS","properties":{"less.validate":{"type":"boolean","scope":"resource","default":true,"description":"Enables or disables all validations."},"less.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Enables or disables color decorators.","deprecationMessage":"The setting `less.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."},"less.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"When using a vendor-specific prefix make sure to also include all other vendor-specific properties."},"less.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"When using a vendor-specific prefix, also include the standard property."},"less.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Do not use duplicate style definitions."},"less.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Do not use empty rulesets."},"less.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Import statements do not load in parallel."},"less.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Do not use `width` or `height` when using `padding` or `border`."},"less.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"The universal selector (`*`) is known to be slow."},"less.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"No unit for zero needed."},"less.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"`@font-face` rule must define `src` and `font-family` properties."},"less.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Hex colors must consist of three or six hex numbers."},"less.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Invalid number of parameters."},"less.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Unknown property."},"less.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"A list of properties that are not validated against the `unknownProperties` rule."},"less.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"IE hacks are only necessary when supporting IE7 and older."},"less.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Unknown vendor specific property."},"less.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect."},"less.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."},"less.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."},"less.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Selectors should not contain IDs because these rules are too tightly coupled with the HTML."}}}]},"dependencies":{"vscode-languageclient":"^5.1.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25","mocha":"^5.2.0"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.css-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css-language-features","scheme":"file"}},{"name":"debug-auto-launch","displayName":"Node Debug Auto-attach","description":"Helper for auto-attach feature when node-debug extensions are not active.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"^1.5.0"},"activationEvents":["*"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/debug-auto-launch/dist/extension","scripts":{"compile":"gulp compile-extension:debug-auto-launch","watch":"gulp watch-extension:debug-auto-launch"},"contributes":{"configuration":{"title":"Node debug","properties":{"debug.node.autoAttach":{"scope":"window","type":"string","enum":["disabled","on","off"],"enumDescriptions":["Auto attach is disabled and not shown in status bar.","Auto attach is active.","Auto attach is inactive."],"description":"Automatically attach node debugger when node.js was launched in debug mode from integrated terminal.","default":"disabled"}}},"commands":[{"command":"extension.node-debug.toggleAutoAttach","title":"Toggle Auto Attach","category":"Debug"}]},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"8.0.33"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.debug-auto-launch","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/debug-auto-launch","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/debug-auto-launch","scheme":"file"}},{"name":"docker","displayName":"Docker Language Basics","description":"Provides syntax highlighting and bracket matching in Docker files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js moby/moby contrib/syntax/textmate/Docker.tmbundle/Syntaxes/Dockerfile.tmLanguage ./syntaxes/docker.tmLanguage.json"},"contributes":{"languages":[{"id":"dockerfile","extensions":[".dockerfile"],"filenames":["Dockerfile"],"aliases":["Dockerfile"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dockerfile","scopeName":"source.dockerfile","path":"./syntaxes/docker.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.docker","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/docker","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/docker","scheme":"file"}},{"name":"emmet","displayName":"Emmet","description":"Emmet support for VS Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"^1.13.0"},"icon":"images/icon.png","categories":["Other"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-emmet"},"activationEvents":["*","onCommand:emmet.expandAbbreviation","onLanguage:html","onLanguage:css","onLanguage:scss","onLanguage:less"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/emmet/dist/extension","contributes":{"configuration":{"type":"object","title":"Emmet","properties":{"emmet.showExpandedAbbreviation":{"type":["string"],"enum":["never","always","inMarkupAndStylesheetFilesOnly"],"default":"always","markdownDescription":"Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css."},"emmet.showAbbreviationSuggestions":{"type":"boolean","default":true,"markdownDescription":"Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`."},"emmet.includeLanguages":{"type":"object","default":{},"markdownDescription":"Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and emmet supported language.\n E.g.: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`"},"emmet.variables":{"type":"object","properties":{"lang":{"type":"string","default":"en"},"charset":{"type":"string","default":"UTF-8"}},"default":{},"description":"Variables to be used in Emmet snippets"},"emmet.syntaxProfiles":{"type":"object","default":{},"description":"Define profile for specified syntax or use your own profile with specific rules."},"emmet.excludeLanguages":{"type":"array","default":["markdown"],"description":"An array of languages where Emmet abbreviations should not be expanded."},"emmet.extensionsPath":{"type":"string","default":null,"description":"Path to a folder containing Emmet profiles and snippets."},"emmet.triggerExpansionOnTab":{"type":"boolean","default":false,"description":"When enabled, Emmet abbreviations are expanded when pressing TAB."},"emmet.preferences":{"type":"object","default":{},"description":"Preferences used to modify behavior of some actions and resolvers of Emmet.","properties":{"css.intUnit":{"type":"string","default":"px","description":"Default unit for integer values"},"css.floatUnit":{"type":"string","default":"em","description":"Default unit for float values"},"css.propertyEnd":{"type":"string","default":";","description":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations"},"sass.propertyEnd":{"type":"string","default":"","description":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files"},"stylus.propertyEnd":{"type":"string","default":"","description":"Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files"},"css.valueSeparator":{"type":"string","default":": ","description":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations"},"sass.valueSeparator":{"type":"string","default":": ","description":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files"},"stylus.valueSeparator":{"type":"string","default":" ","description":"Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files"},"bem.elementSeparator":{"type":"string","default":"__","description":"Element separator used for classes when using the BEM filter"},"bem.modifierSeparator":{"type":"string","default":"_","description":"Modifier separator used for classes when using the BEM filter"},"filter.commentBefore":{"type":"string","default":"","description":"A definition of comment that should be placed before matched element when comment filter is applied."},"filter.commentAfter":{"type":"string","default":"\n<!-- /[#ID][.CLASS] -->","description":"A definition of comment that should be placed after matched element when comment filter is applied."},"filter.commentTrigger":{"type":"array","default":["id","class"],"description":"A comma-separated list of attribute names that should exist in abbreviation for the comment filter to be applied"},"format.noIndentTags":{"type":"array","default":["html"],"description":"An array of tag names that should not get inner indentation"},"format.forceIndentationForTags":{"type":"array","default":["body"],"description":"An array of tag names that should always get inner indentation"},"profile.allowCompactBoolean":{"type":"boolean","default":false,"description":"If true, compact notation of boolean attributes are produced"},"css.webkitProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."},"css.mozProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."},"css.oProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."},"css.msProperties":{"type":"string","default":null,"markdownDescription":"Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."},"css.fuzzySearchMinScore":{"type":"number","default":0.3,"description":"The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."}}},"emmet.showSuggestionsAsSnippets":{"type":"boolean","default":false,"markdownDescription":"If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting."},"emmet.optimizeStylesheetParsing":{"type":"boolean","default":true,"markdownDescription":"When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in css/scss/less files is parsed."}}},"commands":[{"command":"editor.emmet.action.wrapIndividualLinesWithAbbreviation","title":"Wrap Individual Lines with Abbreviation","category":"Emmet"},{"command":"editor.emmet.action.wrapWithAbbreviation","title":"Wrap with Abbreviation","category":"Emmet"},{"command":"editor.emmet.action.removeTag","title":"Remove Tag","category":"Emmet"},{"command":"editor.emmet.action.updateTag","title":"Update Tag","category":"Emmet"},{"command":"editor.emmet.action.matchTag","title":"Go to Matching Pair","category":"Emmet"},{"command":"editor.emmet.action.balanceIn","title":"Balance (inward)","category":"Emmet"},{"command":"editor.emmet.action.balanceOut","title":"Balance (outward)","category":"Emmet"},{"command":"editor.emmet.action.prevEditPoint","title":"Go to Previous Edit Point","category":"Emmet"},{"command":"editor.emmet.action.nextEditPoint","title":"Go to Next Edit Point","category":"Emmet"},{"command":"editor.emmet.action.mergeLines","title":"Merge Lines","category":"Emmet"},{"command":"editor.emmet.action.selectPrevItem","title":"Select Previous Item","category":"Emmet"},{"command":"editor.emmet.action.selectNextItem","title":"Select Next Item","category":"Emmet"},{"command":"editor.emmet.action.splitJoinTag","title":"Split/Join Tag","category":"Emmet"},{"command":"editor.emmet.action.toggleComment","title":"Toggle Comment","category":"Emmet"},{"command":"editor.emmet.action.evaluateMathExpression","title":"Evaluate Math Expression","category":"Emmet"},{"command":"editor.emmet.action.updateImageSize","title":"Update Image Size","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOneTenth","title":"Increment by 0.1","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOne","title":"Increment by 1","category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByTen","title":"Increment by 10","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOneTenth","title":"Decrement by 0.1","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOne","title":"Decrement by 1","category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByTen","title":"Decrement by 10","category":"Emmet"},{"command":"editor.emmet.action.reflectCSSValue","title":"Reflect CSS Value","category":"Emmet"}],"menus":{"commandPalette":[{"command":"editor.emmet.action.wrapIndividualLinesWithAbbreviation","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.wrapWithAbbreviation","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.removeTag","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.updateTag","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.matchTag","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.balanceIn","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.balanceOut","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.prevEditPoint","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.nextEditPoint","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.mergeLines","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.selectPrevItem","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.selectNextItem","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.splitJoinTag","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.toggleComment","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.evaluateMathExpression","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.updateImageSize","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.incrementNumberByOneTenth","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.incrementNumberByOne","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.incrementNumberByTen","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.decrementNumberByOneTenth","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.decrementNumberByOne","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.decrementNumberByTen","when":"resourceScheme =~ /^untitled$|^file$/"},{"command":"editor.emmet.action.reflectCSSValue","when":"resourceScheme =~ /^untitled$|^file$/"}]}},"scripts":{"compile":"gulp compile-extension:emmet"},"devDependencies":{"@types/node":"8.0.33","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","vscode":"1.0.1"},"dependencies":{"@emmetio/css-parser":"ramya-rao-a/css-parser#vscode","@emmetio/html-matcher":"^0.3.3","@emmetio/math-expression":"^0.1.1","image-size":"^0.5.2","vscode-emmet-helper":"^1.2.12"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.emmet","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/emmet","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/emmet","scheme":"file"}},{"name":"extension-editing","displayName":"Extension Authoring","description":"Provides linting capabilities for authoring extensions.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"^1.4.0"},"activationEvents":["onLanguage:json","onLanguage:markdown","onLanguage:typescript"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/extension-editing/dist/extension","scripts":{"compile":"gulp compile-extension:extension-editing","watch":"gulp watch-extension:extension-editing"},"dependencies":{"jsonc-parser":"^2.0.2","markdown-it":"^8.3.1","parse5":"^3.0.2","vscode-nls":"^4.0.0"},"contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"vscode://schemas/vscode-extensions"},{"fileMatch":"*language-configuration.json","url":"vscode://schemas/language-configuration"},{"fileMatch":"*icon-theme.json","url":"vscode://schemas/icon-theme"},{"fileMatch":"*color-theme.json","url":"vscode://schemas/color-theme"}]},"devDependencies":{"@types/markdown-it":"0.0.2","@types/node":"^8.10.25"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.extension-editing","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/extension-editing","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/extension-editing","scheme":"file"}},{"name":"fsharp","displayName":"F# Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in F# files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js ionide/ionide-fsgrammar grammar/fsharp.json ./syntaxes/fsharp.tmLanguage.json"},"contributes":{"languages":[{"id":"fsharp","extensions":[".fs",".fsi",".fsx",".fsscript"],"aliases":["F#","FSharp","fsharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"fsharp","scopeName":"source.fsharp","path":"./syntaxes/fsharp.tmLanguage.json"}],"snippets":[{"language":"fsharp","path":"./snippets/fsharp.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.fsharp","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/fsharp","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/fsharp","scheme":"file"}},{"name":"git","displayName":"Git","description":"Git SCM Integration","publisher":"vscode","version":"1.0.0","engines":{"vscode":"^1.5.0"},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","enableProposedApi":true,"categories":["Other"],"activationEvents":["*"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/git/dist/main","icon":"resources/icons/git.png","scripts":{"compile":"gulp compile-extension:git","watch":"gulp watch-extension:git","update-grammar":"node ./build/update-grammars.js"},"contributes":{"commands":[{"command":"git.clone","title":"Clone","category":"Git"},{"command":"git.init","title":"Initialize Repository","category":"Git","icon":{"light":"resources/icons/light/git.svg","dark":"resources/icons/dark/git.svg"}},{"command":"git.openRepository","title":"Open Repository","category":"Git"},{"command":"git.close","title":"Close Repository","category":"Git"},{"command":"git.refresh","title":"Refresh","category":"Git","icon":{"light":"resources/icons/light/refresh.svg","dark":"resources/icons/dark/refresh.svg"}},{"command":"git.openChange","title":"Open Changes","category":"Git","icon":{"light":"resources/icons/light/open-change.svg","dark":"resources/icons/dark/open-change.svg"}},{"command":"git.openFile","title":"Open File","category":"Git","icon":{"light":"resources/icons/light/open-file.svg","dark":"resources/icons/dark/open-file.svg"}},{"command":"git.openFile2","title":"Open File","category":"Git","icon":{"light":"resources/icons/light/open-file-mono.svg","dark":"resources/icons/dark/open-file-mono.svg"}},{"command":"git.openHEADFile","title":"Open File (HEAD)","category":"Git"},{"command":"git.stage","title":"Stage Changes","category":"Git","icon":{"light":"resources/icons/light/stage.svg","dark":"resources/icons/dark/stage.svg"}},{"command":"git.stageAll","title":"Stage All Changes","category":"Git","icon":{"light":"resources/icons/light/stage.svg","dark":"resources/icons/dark/stage.svg"}},{"command":"git.stageSelectedRanges","title":"Stage Selected Ranges","category":"Git"},{"command":"git.revertSelectedRanges","title":"Revert Selected Ranges","category":"Git"},{"command":"git.stageChange","title":"Stage Change","category":"Git","icon":{"light":"resources/icons/light/stage.svg","dark":"resources/icons/dark/stage.svg"}},{"command":"git.revertChange","title":"Revert Change","category":"Git","icon":{"light":"resources/icons/light/clean.svg","dark":"resources/icons/dark/clean.svg"}},{"command":"git.unstage","title":"Unstage Changes","category":"Git","icon":{"light":"resources/icons/light/unstage.svg","dark":"resources/icons/dark/unstage.svg"}},{"command":"git.unstageAll","title":"Unstage All Changes","category":"Git","icon":{"light":"resources/icons/light/unstage.svg","dark":"resources/icons/dark/unstage.svg"}},{"command":"git.unstageSelectedRanges","title":"Unstage Selected Ranges","category":"Git"},{"command":"git.clean","title":"Discard Changes","category":"Git","icon":{"light":"resources/icons/light/clean.svg","dark":"resources/icons/dark/clean.svg"}},{"command":"git.cleanAll","title":"Discard All Changes","category":"Git","icon":{"light":"resources/icons/light/clean.svg","dark":"resources/icons/dark/clean.svg"}},{"command":"git.commit","title":"Commit","category":"Git","icon":{"light":"resources/icons/light/check.svg","dark":"resources/icons/dark/check.svg"}},{"command":"git.commitStaged","title":"Commit Staged","category":"Git"},{"command":"git.commitEmpty","title":"Commit Empty","category":"Git"},{"command":"git.commitStagedSigned","title":"Commit Staged (Signed Off)","category":"Git"},{"command":"git.commitStagedAmend","title":"Commit Staged (Amend)","category":"Git"},{"command":"git.commitAll","title":"Commit All","category":"Git"},{"command":"git.commitAllSigned","title":"Commit All (Signed Off)","category":"Git"},{"command":"git.commitAllAmend","title":"Commit All (Amend)","category":"Git"},{"command":"git.restoreCommitTemplate","title":"Restore Commit Template","category":"Git"},{"command":"git.undoCommit","title":"Undo Last Commit","category":"Git"},{"command":"git.checkout","title":"Checkout to...","category":"Git"},{"command":"git.branch","title":"Create Branch...","category":"Git"},{"command":"git.deleteBranch","title":"Delete Branch...","category":"Git"},{"command":"git.renameBranch","title":"Rename Branch...","category":"Git"},{"command":"git.merge","title":"Merge Branch...","category":"Git"},{"command":"git.createTag","title":"Create Tag","category":"Git"},{"command":"git.fetch","title":"Fetch","category":"Git"},{"command":"git.fetchAll","title":"Fetch From All Remotes","category":"Git"},{"command":"git.pull","title":"Pull","category":"Git"},{"command":"git.pullRebase","title":"Pull (Rebase)","category":"Git"},{"command":"git.pullFrom","title":"Pull from...","category":"Git"},{"command":"git.push","title":"Push","category":"Git"},{"command":"git.pushForce","title":"Push (Force)","category":"Git"},{"command":"git.pushTo","title":"Push to...","category":"Git"},{"command":"git.pushToForce","title":"Push to... (Force)","category":"Git"},{"command":"git.pushWithTags","title":"Push With Tags","category":"Git"},{"command":"git.pushWithTagsForce","title":"Push With Tags (Force)","category":"Git"},{"command":"git.sync","title":"Sync","category":"Git"},{"command":"git.syncRebase","title":"Sync (Rebase)","category":"Git"},{"command":"git.publish","title":"Publish Branch","category":"Git"},{"command":"git.showOutput","title":"Show Git Output","category":"Git"},{"command":"git.ignore","title":"Add File to .gitignore","category":"Git"},{"command":"git.stashIncludeUntracked","title":"Stash (Include Untracked)","category":"Git"},{"command":"git.stash","title":"Stash","category":"Git"},{"command":"git.stashPop","title":"Pop Stash...","category":"Git"},{"command":"git.stashPopLatest","title":"Pop Latest Stash","category":"Git"},{"command":"git.stashApply","title":"Apply Stash...","category":"Git"},{"command":"git.stashApplyLatest","title":"Apply Latest Stash","category":"Git"}],"menus":{"commandPalette":[{"command":"git.clone","when":"config.git.enabled"},{"command":"git.init","when":"config.git.enabled"},{"command":"git.openRepository","when":"config.git.enabled"},{"command":"git.close","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.refresh","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.openFile","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.openHEADFile","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.openChange","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stage","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stageAll","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stageSelectedRanges","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stageChange","when":"false"},{"command":"git.revertSelectedRanges","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.revertChange","when":"false"},{"command":"git.openFile2","when":"false"},{"command":"git.unstage","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.unstageAll","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.unstageSelectedRanges","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.clean","when":"config.git.enabled && gitOpenRepositoryCount != 0 && !gitFreshRepository"},{"command":"git.cleanAll","when":"config.git.enabled && gitOpenRepositoryCount != 0 && !gitFreshRepository"},{"command":"git.commit","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitStaged","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedSigned","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedAmend","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitAll","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitAllSigned","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.commitAllAmend","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.restoreCommitTemplate","when":"false"},{"command":"git.undoCommit","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.checkout","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.branch","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.deleteBranch","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.renameBranch","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pull","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pullFrom","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pullRebase","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pullFrom","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.merge","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.createTag","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.fetch","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.fetchAll","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.push","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pushForce","when":"config.git.enabled && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushTo","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pushToForce","when":"config.git.enabled && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTags","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTagsForce","when":"config.git.enabled && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.sync","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.syncRebase","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.publish","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.showOutput","when":"config.git.enabled"},{"command":"git.ignore","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stashIncludeUntracked","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stash","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stashPop","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stashPopLatest","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stashApply","when":"config.git.enabled && gitOpenRepositoryCount != 0"},{"command":"git.stashApplyLatest","when":"config.git.enabled && gitOpenRepositoryCount != 0"}],"scm/title":[{"command":"git.init","group":"navigation","when":"config.git.enabled && !scmProvider && gitOpenRepositoryCount == 0 && workspaceFolderCount != 0"},{"command":"git.commit","group":"navigation","when":"scmProvider == git"},{"command":"git.refresh","group":"navigation","when":"scmProvider == git"},{"command":"git.sync","group":"1_sync","when":"scmProvider == git"},{"command":"git.syncRebase","group":"1_sync","when":"scmProvider == git && gitState == idle"},{"command":"git.pull","group":"1_sync","when":"scmProvider == git"},{"command":"git.pullRebase","group":"1_sync","when":"scmProvider == git"},{"command":"git.pullFrom","group":"1_sync","when":"scmProvider == git"},{"command":"git.push","group":"1_sync","when":"scmProvider == git"},{"command":"git.pushTo","group":"1_sync","when":"scmProvider == git"},{"command":"git.publish","group":"2_publish","when":"scmProvider == git"},{"command":"git.commitStaged","group":"3_commit","when":"scmProvider == git"},{"command":"git.commitStagedSigned","group":"3_commit","when":"scmProvider == git"},{"command":"git.commitStagedAmend","group":"3_commit","when":"scmProvider == git"},{"command":"git.commitAll","group":"3_commit","when":"scmProvider == git"},{"command":"git.commitAllSigned","group":"3_commit","when":"scmProvider == git"},{"command":"git.commitAllAmend","group":"3_commit","when":"scmProvider == git"},{"command":"git.undoCommit","group":"3_commit","when":"scmProvider == git"},{"command":"git.stageAll","group":"4_stage","when":"scmProvider == git"},{"command":"git.unstageAll","group":"4_stage","when":"scmProvider == git"},{"command":"git.cleanAll","group":"4_stage","when":"scmProvider == git && !gitFreshRepository"},{"command":"git.stashIncludeUntracked","group":"5_stash","when":"scmProvider == git"},{"command":"git.stash","group":"5_stash","when":"scmProvider == git"},{"command":"git.stashPop","group":"5_stash","when":"scmProvider == git"},{"command":"git.stashPopLatest","group":"5_stash","when":"scmProvider == git"},{"command":"git.stashApply","group":"5_stash","when":"scmProvider == git"},{"command":"git.stashApplyLatest","group":"5_stash","when":"scmProvider == git"},{"command":"git.showOutput","group":"7_repository","when":"scmProvider == git"}],"scm/sourceControl":[{"command":"git.close","group":"navigation","when":"scmProvider == git"}],"scm/resourceGroup/context":[{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == merge","group":"inline"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"inline"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && !gitFreshRepository","group":"1_modification"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && !gitFreshRepository","group":"inline"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline"}],"scm/resourceState/context":[{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == merge","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"inline"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction","group":"inline0"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"inline"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction","group":"inline0"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree && !gitFreshRepository","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree && !gitFreshRepository","group":"inline"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction","group":"inline0"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification@3"}],"editor/title":[{"command":"git.openFile","group":"navigation","when":"config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.openChange","group":"navigation","when":"config.git.enabled && gitOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == file"},{"command":"git.stageSelectedRanges","group":"2_git@1","when":"config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.unstageSelectedRanges","group":"2_git@2","when":"config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.revertSelectedRanges","group":"2_git@3","when":"config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"}],"editor/context":[{"command":"git.stageSelectedRanges","group":"2_git@1","when":"isInDiffRightEditor && config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.unstageSelectedRanges","group":"2_git@2","when":"isInDiffRightEditor && config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.revertSelectedRanges","group":"2_git@3","when":"isInDiffRightEditor && config.git.enabled && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"}],"scm/change/title":[{"command":"git.stageChange","when":"originalResourceScheme == git"},{"command":"git.revertChange","when":"originalResourceScheme == git"}]},"configuration":{"title":"Git","properties":{"git.enabled":{"type":"boolean","scope":"resource","description":"Whether git is enabled.","default":true},"git.path":{"type":["string","null"],"markdownDescription":"Path and filename of the git executable, e.g. `C:\\Program Files\\Git\\bin\\git.exe` (Windows).","default":null,"scope":"application"},"git.autoRepositoryDetection":{"type":["boolean","string"],"enum":[true,false,"subFolders","openEditors"],"enumDescriptions":["Scan for both subfolders of the current opened folder and parent folders of open files.","Disable automatic repository scanning.","Scan for subfolders of the currently opened folder.","Scan for parent folders of open files."],"description":"Configures when repositories should be automatically detected.","default":true},"git.autorefresh":{"type":"boolean","description":"Whether auto refreshing is enabled.","default":true},"git.autofetch":{"type":"boolean","description":"When enabled, commits will automatically be fetched from the default remote of the current Git repository.","default":false,"tags":["usesOnlineServices"]},"git.branchValidationRegex":{"type":"string","description":"A regular expression to validate new branch names.","default":""},"git.branchWhitespaceChar":{"type":"string","description":"The character to replace whitespace in new branch names.","default":"-"},"git.confirmSync":{"type":"boolean","description":"Confirm before synchronizing git repositories.","default":true},"git.countBadge":{"type":"string","enum":["all","tracked","off"],"enumDescriptions":["Count all changes.","Count only tracked changes.","Turn off counter."],"description":"Controls the git badge counter.","default":"all"},"git.checkoutType":{"type":"string","enum":["all","local","tags","remote"],"enumDescriptions":["Show all references.","Show only local branches.","Show only tags.","Show only remote branches."],"markdownDescription":"Controls what type of branches are listed when running `Checkout to...`.","default":"all"},"git.ignoreLegacyWarning":{"type":"boolean","description":"Ignores the legacy Git warning.","default":false},"git.ignoreMissingGitWarning":{"type":"boolean","description":"Ignores the warning when Git is missing.","default":false},"git.ignoreLimitWarning":{"type":"boolean","description":"Ignores the warning when there are too many changes in a repository.","default":false},"git.defaultCloneDirectory":{"type":"string","default":null,"description":"The default location to clone a git repository."},"git.enableSmartCommit":{"type":"boolean","scope":"resource","description":"Commit all changes when there are no staged changes.","default":false},"git.enableCommitSigning":{"type":"boolean","scope":"resource","description":"Enables commit signing with GPG.","default":false},"git.confirmEmptyCommits":{"type":"boolean","scope":"resource","description":"Always confirm the creation of empty commits.","default":true},"git.decorations.enabled":{"type":"boolean","default":true,"description":"Controls whether Git contributes colors and badges to the explorer and the open editors view."},"git.promptToSaveFilesBeforeCommit":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether Git should check for unsaved files before committing."},"git.showInlineOpenFileAction":{"type":"boolean","default":true,"description":"Controls whether to show an inline Open File action in the Git changes view."},"git.showPushSuccessNotification":{"type":"boolean","description":"Controls whether to show a notification when a push is successful.","default":false},"git.inputValidation":{"type":"string","enum":["always","warn","off"],"default":"warn","description":"Controls when to show commit message input validation."},"git.inputValidationLength":{"type":"number","default":72,"description":"Controls the commit message length threshold for showing a warning."},"git.detectSubmodules":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether to automatically detect git submodules."},"git.detectSubmodulesLimit":{"type":"number","scope":"resource","default":10,"description":"Controls the limit of git submodules detected."},"git.alwaysShowStagedChangesResourceGroup":{"type":"boolean","scope":"resource","default":false,"description":"Always show the Staged Changes resource group."},"git.alwaysSignOff":{"type":"boolean","scope":"resource","default":false,"description":"Controls the signoff flag for all commits."},"git.ignoredRepositories":{"type":"array","default":[],"scope":"window","description":"List of git repositories to ignore."},"git.scanRepositories":{"type":"array","default":[],"scope":"resource","description":"List of paths to search for git repositories in."},"git.showProgress":{"type":"boolean","description":"Controls whether git actions should show progress.","default":true,"scope":"resource"},"git.rebaseWhenSync":{"type":"boolean","scope":"resource","default":false,"description":"Force git to use rebase when running the sync command."},"git.fetchOnPull":{"type":"boolean","scope":"resource","default":false,"description":"Fetch all branches when pulling or just the current one."},"git.allowForcePush":{"type":"boolean","default":false,"description":"Controls whether force push (with or without lease) is enabled."},"git.useForcePushWithLease":{"type":"boolean","default":true,"description":"Controls whether force pushing uses the safer force-with-lease variant."},"git.confirmForcePush":{"type":"boolean","default":true,"description":"Controls whether to ask for confirmation before force-pushing."}}},"colors":[{"id":"gitDecoration.addedResourceForeground","description":"Color for added resources.","defaults":{"light":"#587c0c","dark":"#81b88b","highContrast":"#1b5225"}},{"id":"gitDecoration.modifiedResourceForeground","description":"Color for modified resources.","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitDecoration.deletedResourceForeground","description":"Color for deleted resources.","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitDecoration.untrackedResourceForeground","description":"Color for untracked resources.","defaults":{"light":"#007100","dark":"#73C991","highContrast":"#73C991"}},{"id":"gitDecoration.ignoredResourceForeground","description":"Color for ignored resources.","defaults":{"light":"#8E8E90","dark":"#8C8C8C","highContrast":"#A7A8A9"}},{"id":"gitDecoration.conflictingResourceForeground","description":"Color for resources with conflicts.","defaults":{"light":"#6c6cc4","dark":"#6c6cc4","highContrast":"#6c6cc4"}},{"id":"gitDecoration.submoduleResourceForeground","description":"Color for submodule resources.","defaults":{"light":"#1258a7","dark":"#8db9e2","highContrast":"#8db9e2"}}],"languages":[{"id":"git-commit","aliases":["Git Commit Message","git-commit"],"filenames":["COMMIT_EDITMSG","MERGE_MSG"],"configuration":"./languages/git-commit.language-configuration.json"},{"id":"git-rebase","aliases":["Git Rebase Message","git-rebase"],"filenames":["git-rebase-todo"],"configuration":"./languages/git-rebase.language-configuration.json"},{"id":"diff","aliases":["Diff","diff"],"extensions":[".patch",".diff",".rej"],"configuration":"./languages/diff.language-configuration.json"},{"id":"ignore","aliases":["Ignore","ignore"],"filenames":[".gitignore"],"configuration":"./languages/ignore.language-configuration.json"}],"grammars":[{"language":"git-commit","scopeName":"text.git-commit","path":"./syntaxes/git-commit.tmLanguage.json"},{"language":"git-rebase","scopeName":"text.git-rebase","path":"./syntaxes/git-rebase.tmLanguage.json"},{"language":"diff","scopeName":"source.diff","path":"./syntaxes/diff.tmLanguage.json"},{"language":"ignore","scopeName":"source.ignore","path":"./syntaxes/ignore.tmLanguage.json"}],"configurationDefaults":{"[git-commit]":{"editor.rulers":[72]}}},"dependencies":{"byline":"^5.0.0","file-type":"^7.2.0","iconv-lite":"0.4.19","jschardet":"^1.6.0","vscode-extension-telemetry":"0.1.0","vscode-nls":"^4.0.0","which":"^1.3.0"},"devDependencies":{"@types/byline":"4.2.31","@types/file-type":"^5.2.1","@types/mocha":"2.2.43","@types/node":"^8.10.25","@types/which":"^1.0.28","mocha":"^3.2.0"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.git","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/git","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/git","scheme":"file"}},{"name":"go","displayName":"Go Language Basics","description":"Provides syntax highlighting and bracket matching in Go files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-go grammars/go.cson ./syntaxes/go.tmLanguage.json"},"contributes":{"languages":[{"id":"go","extensions":[".go"],"aliases":["Go"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"go","scopeName":"source.go","path":"./syntaxes/go.tmLanguage.json"}],"configurationDefaults":{"[go]":{"editor.insertSpaces":false}}},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.go","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/go","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/go","scheme":"file"}},{"name":"groovy","displayName":"Groovy Language Basics","description":"Provides snippets, syntax highlighting and bracket matching in Groovy files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/groovy.tmbundle Syntaxes/Groovy.tmLanguage ./syntaxes/groovy.tmLanguage.json"},"contributes":{"languages":[{"id":"groovy","aliases":["Groovy","groovy"],"extensions":[".groovy",".gvy",".gradle"],"filenames":["Jenkinsfile"],"firstLine":"^#!.*\\bgroovy\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"groovy","scopeName":"source.groovy","path":"./syntaxes/groovy.tmLanguage.json"}],"snippets":[{"language":"groovy","path":"./snippets/groovy.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.groovy","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/groovy","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/groovy","scheme":"file"}},{"name":"grunt","publisher":"vscode","description":"Extension to add Grunt capabilities to VS Code.","displayName":"Grunt support for VS Code","version":"1.0.0","icon":"images/grunt.png","engines":{"vscode":"*"},"categories":["Other"],"scripts":{"compile":"gulp compile-extension:grunt","watch":"gulp watch-extension:grunt"},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/grunt/dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"contributes":{"configuration":{"id":"grunt","type":"object","title":"Grunt","properties":{"grunt.autoDetect":{"scope":"resource","type":"string","enum":["off","on"],"default":"on","description":"Controls whether auto detection of Grunt tasks is on or off. Default is on."}}},"taskDefinitions":[{"type":"grunt","required":["task"],"properties":{"task":{"type":"string","description":"The Grunt task to customize."},"file":{"type":"string","description":"The Grunt file that provides the task. Can be omitted."}}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.grunt","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/grunt","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/grunt","scheme":"file"}},{"name":"gulp","publisher":"vscode","description":"Extension to add Gulp capabilities to VSCode.","displayName":"Gulp support for VSCode","version":"1.0.0","icon":"images/gulp.png","engines":{"vscode":"*"},"categories":["Other"],"scripts":{"compile":"gulp compile-extension:gulp","watch":"gulp watch-extension:gulp"},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/gulp/dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"contributes":{"configuration":{"id":"gulp","type":"object","title":"Gulp","properties":{"gulp.autoDetect":{"scope":"resource","type":"string","enum":["off","on"],"default":"on","description":"Controls whether auto detection of Gulp tasks is on or off. Default is on."}}},"taskDefinitions":[{"type":"gulp","required":["task"],"properties":{"task":{"type":"string","description":"The Gulp task to customize."},"file":{"type":"string","description":"The Gulp file that provides the task. Can be omitted."}}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.gulp","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/gulp","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/gulp","scheme":"file"}},{"name":"handlebars","displayName":"Handlebars Language Basics","description":"Provides syntax highlighting and bracket matching in Handlebars files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js daaain/Handlebars grammars/Handlebars.json ./syntaxes/Handlebars.tmLanguage.json"},"contributes":{"languages":[{"id":"handlebars","extensions":[".handlebars",".hbs",".hjs"],"aliases":["Handlebars","handlebars"],"mimetypes":["text/x-handlebars-template"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"handlebars","scopeName":"text.html.handlebars","path":"./syntaxes/Handlebars.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.handlebars","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/handlebars","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/handlebars","scheme":"file"}},{"name":"hlsl","displayName":"HLSL Language Basics","description":"Provides syntax highlighting and bracket matching in HLSL files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js tgjones/shaders-tmLanguage grammars/hlsl.json ./syntaxes/hlsl.tmLanguage.json"},"contributes":{"languages":[{"id":"hlsl","extensions":[".hlsl",".hlsli",".fx",".fxh",".vsh",".psh",".cginc",".compute"],"aliases":["HLSL","hlsl"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"hlsl","path":"./syntaxes/hlsl.tmLanguage.json","scopeName":"source.hlsl"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.hlsl","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/hlsl","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/hlsl","scheme":"file"}},{"name":"html","displayName":"HTML Language Basics","description":"Provides syntax highlighting, bracket matching & snippets in HTML files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/html.tmbundle Syntaxes/HTML.plist ./syntaxes/html.tmLanguage.json Syntaxes/HTML%20%28Derivative%29.tmLanguage ./syntaxes/html-derivative.tmLanguage.json"},"contributes":{"languages":[{"id":"html","extensions":[".html",".htm",".shtml",".xhtml",".mdoc",".jsp",".asp",".aspx",".jshtm",".volt",".ejs",".rhtml"],"aliases":["HTML","htm","html","xhtml"],"mimetypes":["text/html","text/x-jshtm","text/template","text/ng-template","application/xhtml+xml"],"configuration":"./language-configuration.json"}],"grammars":[{"scopeName":"text.html.basic","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}},{"language":"html","scopeName":"text.html.derivative","path":"./syntaxes/html-derivative.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}}],"snippets":[{"language":"html","path":"./snippets/html.snippets.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.html","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/html","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/html","scheme":"file"}},{"name":"html-language-features","displayName":"HTML Language Features","description":"Provides rich language support for HTML, Razor, and Handlebar files","version":"1.0.0","publisher":"vscode","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"0.10.x"},"icon":"icons/html.png","activationEvents":["onLanguage:html","onLanguage:handlebars","onLanguage:razor"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/html-language-features/client/dist/htmlMain","scripts":{"compile":"gulp compile-extension:html-language-features-client compile-extension:html-language-features-server","watch":"gulp watch-extension:html-language-features-client watch-extension:html-language-features-server","postinstall":"cd server && yarn install","install-client-next":"yarn add vscode-languageclient@next"},"categories":["Programming Languages"],"contributes":{"configuration":{"id":"html","order":20,"type":"object","title":"HTML","properties":{"html.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default HTML formatter."},"html.format.wrapLineLength":{"type":"integer","scope":"resource","default":120,"description":"Maximum amount of characters per line (0 = disable)."},"html.format.unformatted":{"type":["string","null"],"scope":"resource","default":"wbr","markdownDescription":"List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content."},"html.format.contentUnformatted":{"type":["string","null"],"scope":"resource","default":"pre,code,textarea","markdownDescription":"List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag."},"html.format.indentInnerHtml":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Indent `<head>` and `<body>` sections."},"html.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text."},"html.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited."},"html.format.indentHandlebars":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Format and indent `{{#foo}}` and `{{/foo}}`."},"html.format.endWithNewline":{"type":"boolean","scope":"resource","default":false,"description":"End with a newline."},"html.format.extraLiners":{"type":["string","null"],"scope":"resource","default":"head, body, /html","markdownDescription":"List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`."},"html.format.wrapAttributes":{"type":"string","scope":"resource","default":"auto","enum":["auto","force","force-aligned","force-expand-multiline","aligned-multiple"],"enumDescriptions":["Wrap attributes only when line length is exceeded.","Wrap each attribute except first.","Wrap each attribute except first and keep aligned.","Wrap each attribute.","Wrap when line length is exceeded, align attributes vertically."],"description":"Wrap attributes."},"html.suggest.angular1":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether the built-in HTML language support suggests Angular V1 tags and properties."},"html.suggest.ionic":{"type":"boolean","scope":"resource","default":false,"description":"Controls whether the built-in HTML language support suggests Ionic tags, properties and values."},"html.suggest.html5":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support suggests HTML5 tags, properties and values."},"html.validate.scripts":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support validates embedded scripts."},"html.validate.styles":{"type":"boolean","scope":"resource","default":true,"description":"Controls whether the built-in HTML language support validates embedded styles."},"html.autoClosingTags":{"type":"boolean","scope":"resource","default":true,"description":"Enable/disable autoclosing of HTML tags."},"html.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the HTML language server."}}}},"dependencies":{"vscode-extension-telemetry":"0.1.0","vscode-languageclient":"^5.1.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.html-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/html-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/html-language-features","scheme":"file"}},{"name":"ini","displayName":"Ini Language Basics","description":"Provides syntax highlighting and bracket matching in Ini files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/ini.tmbundle Syntaxes/Ini.plist ./syntaxes/ini.tmLanguage.json"},"contributes":{"languages":[{"id":"ini","extensions":[".ini"],"aliases":["Ini","ini"],"configuration":"./ini.language-configuration.json"},{"id":"properties","extensions":[".properties",".cfg",".conf",".desktop",".directory"],"filenames":["config",".gitattributes",".gitconfig","gitconfig",".editorconfig"],"aliases":["Properties","properties"],"configuration":"./properties.language-configuration.json"}],"grammars":[{"language":"ini","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"},{"language":"properties","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.ini","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ini","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ini","scheme":"file"}},{"name":"jake","publisher":"vscode","description":"Extension to add Jake capabilities to VS Code.","displayName":"Jake support for VS Code","icon":"images/cowboy_hat.png","version":"1.0.0","engines":{"vscode":"*"},"categories":["Other"],"scripts":{"compile":"gulp compile-extension:jake","watch":"gulp watch-extension:jake"},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/jake/dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"contributes":{"configuration":{"id":"jake","type":"object","title":"Jake","properties":{"jake.autoDetect":{"scope":"resource","type":"string","enum":["off","on"],"default":"on","description":"Controls whether auto detection of Jake tasks is on or off. Default is on."}}},"taskDefinitions":[{"type":"jake","required":["task"],"properties":{"task":{"type":"string","description":"The Jake task to customize."},"file":{"type":"string","description":"The Jake file that provides the task. Can be omitted."}}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.jake","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/jake","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/jake","scheme":"file"}},{"name":"java","displayName":"Java Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Java files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-java grammars/java.cson ./syntaxes/java.tmLanguage.json"},"contributes":{"languages":[{"id":"java","extensions":[".java",".jav"],"aliases":["Java","java"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"java","scopeName":"source.java","path":"./syntaxes/java.tmLanguage.json"}],"snippets":[{"language":"java","path":"./snippets/java.snippets.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.java","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/java","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/java","scheme":"file"}},{"name":"javascript","displayName":"JavaScript Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in JavaScript files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"contributes":{"languages":[{"id":"javascriptreact","aliases":["JavaScript React","jsx"],"extensions":[".jsx"],"configuration":"./javascript-language-configuration.json"},{"id":"javascript","aliases":["JavaScript","javascript","js"],"extensions":[".js",".es6",".mjs",".pac"],"filenames":["jakefile"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"],"configuration":"./javascript-language-configuration.json"},{"id":"jsx-tags","aliases":[],"configuration":"./tags-language-configuration.json"}],"grammars":[{"language":"javascriptreact","scopeName":"source.js.jsx","path":"./syntaxes/JavaScriptReact.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js.jsx":"javascriptreact","meta.embedded.expression.js":"javascriptreact"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"javascript","scopeName":"source.js","path":"./syntaxes/JavaScript.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js":"javascript","meta.embedded.expression.js":"javascript"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"scopeName":"source.js.regexp","path":"./syntaxes/Regular Expressions (JavaScript).tmLanguage"}],"snippets":[{"language":"javascript","path":"./snippets/javascript.json"},{"language":"javascriptreact","path":"./snippets/javascript.json"}],"jsonValidation":[{"fileMatch":".bowerrc","url":"https://schemastore.azurewebsites.net/schemas/json/bowerrc.json"},{"fileMatch":".babelrc","url":"https://schemastore.azurewebsites.net/schemas/json/babelrc.json"},{"fileMatch":".babelrc.json","url":"https://schemastore.azurewebsites.net/schemas/json/babelrc.json"},{"fileMatch":"jsconfig.json","url":"https://schemastore.azurewebsites.net/schemas/json/jsconfig.json"},{"fileMatch":"jsconfig.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"https://schemastore.azurewebsites.net/schemas/json/jsconfig.json"},{"fileMatch":"jsconfig.*.json","url":"./schemas/jsconfig.schema.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.javascript","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/javascript","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/javascript","scheme":"file"}},{"name":"json","displayName":"JSON Language Basics","description":"Provides syntax highlighting & bracket matching in JSON files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"json","aliases":["JSON","json"],"extensions":[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".webmanifest",".js.map",".css.map"],"filenames":[".watchmanconfig",".ember-cli"],"mimetypes":["application/json","application/manifest+json"],"configuration":"./language-configuration.json"},{"id":"jsonc","aliases":["JSON with Comments"],"extensions":[".jsonc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"json","scopeName":"source.json","path":"./syntaxes/JSON.tmLanguage.json"},{"language":"jsonc","scopeName":"source.json.comments","path":"./syntaxes/JSONC.tmLanguage.json"}],"jsonValidation":[{"fileMatch":"*.schema.json","url":"http://json-schema.org/draft-07/schema#"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.json","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json","scheme":"file"}},{"name":"json-language-features","displayName":"JSON Language Features","description":"Provides rich language support for JSON files.","version":"1.0.0","publisher":"vscode","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"0.10.x"},"icon":"icons/json.png","activationEvents":["onLanguage:json","onLanguage:jsonc"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json-language-features/client/dist/jsonMain","scripts":{"compile":"gulp compile-extension:json-language-features-client compile-extension:json-language-features-server","watch":"gulp watch-extension:json-language-features-client watch-extension:json-language-features-server","postinstall":"cd server && yarn install","install-client-next":"yarn add vscode-languageclient@next"},"categories":["Programming Languages"],"contributes":{"configuration":{"id":"json","order":20,"type":"object","title":"JSON","properties":{"json.schemas":{"type":"array","scope":"resource","description":"Associate schemas to JSON files in the current project","items":{"type":"object","default":{"fileMatch":["/myfile"],"url":"schemaURL"},"properties":{"url":{"type":"string","default":"/user.schema.json","description":"A URL to a schema or a relative path to a schema in the current directory"},"fileMatch":{"type":"array","items":{"type":"string","default":"MyFile.json","description":"A file pattern that can contain '*' to match against when resolving JSON files to schemas."},"minItems":1,"description":"An array of file patterns to match against when resolving JSON files to schemas."},"schema":{"$ref":"http://json-schema.org/draft-07/schema#","description":"The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."}}}},"json.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default JSON formatter"},"json.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the JSON language server."},"json.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Enables or disables color decorators","deprecationMessage":"The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`."}}},"configurationDefaults":{"[json]":{"editor.quickSuggestions":{"strings":true}}}},"dependencies":{"vscode-extension-telemetry":"0.1.0","vscode-languageclient":"^5.1.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.json-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json-language-features","scheme":"file"}},{"name":"less","displayName":"Less Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Less files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-less grammars/less.cson ./syntaxes/less.tmLanguage.json"},"contributes":{"languages":[{"id":"less","aliases":["Less","less"],"extensions":[".less"],"mimetypes":["text/x-less","text/less"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"less","scopeName":"source.css.less","path":"./syntaxes/less.tmLanguage.json"}],"problemMatchers":[{"name":"lessc","label":"Lessc compiler","owner":"lessc","source":"less","fileLocation":"absolute","pattern":{"regexp":"(.*)\\sin\\s(.*)\\son line\\s(\\d+),\\scolumn\\s(\\d+)","message":1,"file":2,"line":3,"column":4}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.less","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/less","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/less","scheme":"file"}},{"name":"log","displayName":"Log","description":"Provides syntax highlighting for files with .log extension.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js emilast/vscode-logfile-highlighter syntaxes/log.tmLanguage ./syntaxes/log.tmLanguage.json"},"contributes":{"languages":[{"id":"log","extensions":[".log","*.log.?"],"aliases":["log"]}],"grammars":[{"language":"log","scopeName":"text.log","path":"./syntaxes/log.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.log","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/log","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/log","scheme":"file"}},{"name":"lua","displayName":"Lua Language Basics","description":"Provides syntax highlighting and bracket matching in Lua files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/lua.tmbundle Syntaxes/Lua.plist ./syntaxes/lua.tmLanguage.json"},"contributes":{"languages":[{"id":"lua","extensions":[".lua"],"aliases":["Lua","lua"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"lua","scopeName":"source.lua","path":"./syntaxes/lua.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.lua","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/lua","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/lua","scheme":"file"}},{"name":"make","displayName":"Make Language Basics","description":"Provides syntax highlighting and bracket matching in Make files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js fadeevab/make.tmbundle Syntaxes/Makefile.plist ./syntaxes/make.tmLanguage.json"},"contributes":{"languages":[{"id":"makefile","aliases":["Makefile","makefile"],"extensions":[".mk"],"filenames":["Makefile","makefile","GNUmakefile","OCamlMakefile"],"firstLine":"^#!\\s*/usr/bin/make","configuration":"./language-configuration.json"}],"grammars":[{"language":"makefile","scopeName":"source.makefile","path":"./syntaxes/make.tmLanguage.json","tokenTypes":{"string.interpolated":"other"}}],"configurationDefaults":{"[makefile]":{"editor.insertSpaces":false}}},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.make","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/make","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/make","scheme":"file"}},{"name":"markdown","displayName":"Markdown Language Basics","description":"Provides snippets and syntax highlighting for Markdown.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"^1.20.0"},"contributes":{"languages":[{"id":"markdown","aliases":["Markdown","markdown"],"extensions":[".md",".mkd",".mdwn",".mdown",".markdown",".markdn",".mdtxt",".mdtext",".workbook"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"markdown","scopeName":"text.html.markdown","path":"./syntaxes/markdown.tmLanguage.json","embeddedLanguages":{"meta.embedded.block.html":"html","source.js":"javascript","source.css":"css","meta.embedded.block.frontmatter":"yaml","meta.embedded.block.css":"css","meta.embedded.block.ini":"ini","meta.embedded.block.java":"java","meta.embedded.block.lua":"lua","meta.embedded.block.makefile":"makefile","meta.embedded.block.perl":"perl","meta.embedded.block.r":"r","meta.embedded.block.ruby":"ruby","meta.embedded.block.php":"php","meta.embedded.block.sql":"sql","meta.embedded.block.vs_net":"vs_net","meta.embedded.block.xml":"xml","meta.embedded.block.xsl":"xsl","meta.embedded.block.yaml":"yaml","meta.embedded.block.dosbatch":"dosbatch","meta.embedded.block.clojure":"clojure","meta.embedded.block.coffee":"coffee","meta.embedded.block.c":"c","meta.embedded.block.cpp":"cpp","meta.embedded.block.diff":"diff","meta.embedded.block.dockerfile":"dockerfile","meta.embedded.block.go":"go","meta.embedded.block.groovy":"groovy","meta.embedded.block.pug":"jade","meta.embedded.block.javascript":"javascript","meta.embedded.block.json":"json","meta.embedded.block.less":"less","meta.embedded.block.objc":"objc","meta.embedded.block.scss":"scss","meta.embedded.block.perl6":"perl6","meta.embedded.block.powershell":"powershell","meta.embedded.block.python":"python","meta.embedded.block.rust":"rust","meta.embedded.block.scala":"scala","meta.embedded.block.shellscript":"shellscript","meta.embedded.block.typescript":"typescript","meta.embedded.block.typescriptreact":"typescriptreact","meta.embedded.block.csharp":"csharp","meta.embedded.block.fsharp":"fsharp"}}],"snippets":[{"language":"markdown","path":"./snippets/markdown.json"}]},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js microsoft/vscode-markdown-tm-grammar syntaxes/markdown.tmLanguage ./syntaxes/markdown.tmLanguage.json"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.markdown","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/markdown-basics","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/markdown-basics","scheme":"file"}},{"name":"markdown-language-features","displayName":"Markdown Language Features","description":"Provides rich language support for Markdown.","version":"1.0.0","icon":"icon.png","publisher":"vscode","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.20.0"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/markdown-language-features/dist/extension","categories":["Programming Languages"],"activationEvents":["onLanguage:markdown","onCommand:markdown.preview.toggleLock","onCommand:markdown.preview.refresh","onCommand:markdown.showPreview","onCommand:markdown.showPreviewToSide","onCommand:markdown.showLockedPreviewToSide","onCommand:markdown.showSource","onCommand:markdown.showPreviewSecuritySelector","onWebviewPanel:markdown.preview"],"contributes":{"commands":[{"command":"markdown.showPreview","title":"Open Preview","category":"Markdown","icon":{"light":"./media/Preview.svg","dark":"./media/Preview_inverse.svg"}},{"command":"markdown.showPreviewToSide","title":"Open Preview to the Side","category":"Markdown","icon":{"light":"./media/PreviewOnRightPane_16x.svg","dark":"./media/PreviewOnRightPane_16x_dark.svg"}},{"command":"markdown.showLockedPreviewToSide","title":"Open Locked Preview to the Side","category":"Markdown","icon":{"light":"./media/PreviewOnRightPane_16x.svg","dark":"./media/PreviewOnRightPane_16x_dark.svg"}},{"command":"markdown.showSource","title":"Show Source","category":"Markdown","icon":{"light":"./media/ViewSource.svg","dark":"./media/ViewSource_inverse.svg"}},{"command":"markdown.showPreviewSecuritySelector","title":"Change Preview Security Settings","category":"Markdown"},{"command":"markdown.preview.refresh","title":"Refresh Preview","category":"Markdown"},{"command":"markdown.preview.toggleLock","title":"Toggle Preview Locking","category":"Markdown"}],"menus":{"editor/title":[{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown","alt":"markdown.showPreview","group":"navigation"},{"command":"markdown.showSource","when":"markdownPreviewFocus","group":"navigation"},{"command":"markdown.preview.refresh","when":"markdownPreviewFocus","group":"1_markdown"},{"command":"markdown.preview.toggleLock","when":"markdownPreviewFocus","group":"1_markdown"},{"command":"markdown.showPreviewSecuritySelector","when":"markdownPreviewFocus","group":"1_markdown"}],"explorer/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown","group":"navigation"}],"editor/title/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown","group":"navigation"}],"commandPalette":[{"command":"markdown.showPreview","when":"editorLangId == markdown","group":"navigation"},{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown","group":"navigation"},{"command":"markdown.showLockedPreviewToSide","when":"editorLangId == markdown","group":"navigation"},{"command":"markdown.showSource","when":"markdownPreviewFocus","group":"navigation"},{"command":"markdown.showPreviewSecuritySelector","when":"editorLangId == markdown"},{"command":"markdown.showPreviewSecuritySelector","when":"markdownPreviewFocus"},{"command":"markdown.preview.toggleLock","when":"markdownPreviewFocus"}]},"keybindings":[{"command":"markdown.showPreview","key":"shift+ctrl+v","mac":"shift+cmd+v","when":"editorLangId == markdown"},{"command":"markdown.showPreviewToSide","key":"ctrl+k v","mac":"cmd+k v","when":"editorLangId == markdown"}],"configuration":{"type":"object","title":"Markdown","order":20,"properties":{"markdown.styles":{"type":"array","default":[],"description":"A list of URLs or local paths to CSS style sheets to use from the markdown preview. Relative paths are interpreted relative to the folder open in the explorer. If there is no open folder, they are interpreted relative to the location of the markdown file. All '\\' need to be written as '\\\\'.","scope":"resource"},"markdown.previewFrontMatter":{"type":"string","enum":["hide","show"],"default":"hide","description":"Sets how YAML front matter should be rendered in the markdown preview. 'hide' removes the front matter. Otherwise, the front matter is treated as markdown content.","scope":"resource"},"markdown.preview.breaks":{"type":"boolean","default":false,"description":"Sets how line-breaks are rendered in the markdown preview. Setting it to 'true' creates a <br> for every newline.","scope":"resource"},"markdown.preview.linkify":{"type":"boolean","default":true,"description":"Enable or disable conversion of URL-like text to links in the markdown preview.","scope":"resource"},"markdown.preview.fontFamily":{"type":"string","default":"-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif","description":"Controls the font family used in the markdown preview.","scope":"resource"},"markdown.preview.fontSize":{"type":"number","default":14,"description":"Controls the font size in pixels used in the markdown preview.","scope":"resource"},"markdown.preview.lineHeight":{"type":"number","default":1.6,"description":"Controls the line height used in the markdown preview. This number is relative to the font size.","scope":"resource"},"markdown.preview.scrollPreviewWithEditor":{"type":"boolean","default":true,"description":"When a markdown editor is scrolled, update the view of the preview.","scope":"resource"},"markdown.preview.scrollPreviewWithEditorSelection":{"type":"boolean","default":true,"description":"[Deprecated] Scrolls the markdown preview to reveal the currently selected line from the editor.","deprecationMessage":"This setting has been replaced by 'markdown.preview.scrollPreviewWithEditor' and no longer has any effect."},"markdown.preview.markEditorSelection":{"type":"boolean","default":true,"description":"Mark the current editor selection in the markdown preview.","scope":"resource"},"markdown.preview.scrollEditorWithPreview":{"type":"boolean","default":true,"description":"When a markdown preview is scrolled, update the view of the editor.","scope":"resource"},"markdown.preview.doubleClickToSwitchToEditor":{"type":"boolean","default":true,"description":"Double click in the markdown preview to switch to the editor.","scope":"resource"},"markdown.preview.openMarkdownLinks":{"type":"string","default":"inPreview","description":"How should clicking on links to markdown files be handled in the preview.","scope":"resource","enum":["inPreview","inEditor"],"enumDescriptions":["Try to open links in the markdown preview","Try to open links in the editor"]},"markdown.trace":{"type":"string","enum":["off","verbose"],"default":"off","description":"Enable debug logging for the markdown extension.","scope":"window"}}},"configurationDefaults":{"[markdown]":{"editor.wordWrap":"on","editor.quickSuggestions":false}},"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"markdown.previewStyles":["./media/markdown.css","./media/highlight.css"],"markdown.previewScripts":["./media/index.js"]},"scripts":{"compile":"gulp compile-extension:markdown-language-features && npm run build-preview","watch":"npm run build-preview && gulp watch-extension:markdown-language-features","vscode:prepublish":"npm run build-ext && npm run build-preview","build-ext":"node ../../node_modules/gulp/bin/gulp.js --gulpfile ../../build/gulpfile.extensions.js compile-extension:markdown-language-features ./tsconfig.json","build-preview":"webpack --mode development"},"dependencies":{"highlight.js":"9.12.0","markdown-it":"^8.4.1","vscode-extension-telemetry":"0.1.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/highlight.js":"9.1.10","@types/lodash.throttle":"^4.1.3","@types/markdown-it":"0.0.2","@types/node":"^8.10.25","lodash.throttle":"^4.1.1","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","ts-loader":"^4.0.1","typescript":"^2.7.2","vscode":"^1.1.10","webpack":"^4.1.0","webpack-cli":"^2.0.10"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.markdown-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/markdown-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/markdown-language-features","scheme":"file"}},{"name":"merge-conflict","publisher":"vscode","displayName":"Merge Conflict","description":"Highlighting and commands for inline merge conflicts.","icon":"resources/icons/merge-conflict.png","version":"1.0.0","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.5.0"},"categories":["Other"],"activationEvents":["*"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/merge-conflict/dist/extension","scripts":{"compile":"gulp compile-extension:merge-conflict","watch":"gulp watch-extension:merge-conflict"},"contributes":{"commands":[{"category":"Merge Conflict","title":"Accept All Current","original":"Accept All Current","command":"merge-conflict.accept.all-current"},{"category":"Merge Conflict","title":"Accept All Incoming","original":"Accept All Incoming","command":"merge-conflict.accept.all-incoming"},{"category":"Merge Conflict","title":"Accept All Both","original":"Accept All Both","command":"merge-conflict.accept.all-both"},{"category":"Merge Conflict","title":"Accept Current","original":"Accept Current","command":"merge-conflict.accept.current"},{"category":"Merge Conflict","title":"Accept Incoming","original":"Accept Incoming","command":"merge-conflict.accept.incoming"},{"category":"Merge Conflict","title":"Accept Selection","original":"Accept Selection","command":"merge-conflict.accept.selection"},{"category":"Merge Conflict","title":"Accept Both","original":"Accept Both","command":"merge-conflict.accept.both"},{"category":"Merge Conflict","title":"Next Conflict","original":"Next Conflict","command":"merge-conflict.next"},{"category":"Merge Conflict","title":"Previous Conflict","original":"Previous Conflict","command":"merge-conflict.previous"},{"category":"Merge Conflict","title":"Compare Current Conflict","original":"Compare Current Conflict","command":"merge-conflict.compare"}],"menus":{"scm/resourceState/context":[{"command":"merge-conflict.accept.all-current","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"merge-conflict.accept.all-incoming","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"}]},"configuration":{"title":"Merge Conflict","properties":{"merge-conflict.codeLens.enabled":{"type":"boolean","description":"Create a Code Lens for merge conflict blocks within editor.","default":true},"merge-conflict.decorators.enabled":{"type":"boolean","description":"Create decorators for merge conflict blocks within editor.","default":true},"merge-conflict.autoNavigateNextConflict.enabled":{"type":"boolean","description":"Whether to automatically navigate to the next merge conflict after resolving a merge conflict.","default":false}}}},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"8.0.33"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.merge-conflict","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/merge-conflict","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/merge-conflict","scheme":"file"}},{"name":"node-debug","displayName":"Node Debug (legacy)","version":"1.29.2","publisher":"ms-vscode","description":"Node.js debugging support (versions < 8.0)","icon":"images/node-debug-icon.png","categories":["Debuggers"],"author":{"name":"Microsoft Corporation"},"license":"MIT","private":true,"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","build":"gulp build","watch":"gulp watch","test":"gulp compile && mocha --timeout 10000 -u tdd ./out/tests/","nodemon":"nodemon --debug --nolazy ./dist/nodeDebug.js --server=4711","prepublish":"gulp build","package":"gulp prepare-for-webpack && webpack --mode production --vscode-nls && vsce package","publish":"gulp prepare-for-webpack && webpack --mode production --vscode-nls && vsce publish","bump":"npm version patch -m 'bump to %s'","tslint":"gulp tslint"},"keywords":["multi-root ready"],"engines":{"vscode":"^1.27.0","node":"^8.9.1"},"extensionDependencies":["ms-vscode.node-debug2"],"dependencies":{"vscode-debugadapter":"1.32.1","source-map":"0.6.1","vscode-nls":"4.0.0","request-light":"0.2.4","glob":"7.1.2","minimatch":"3.0.4"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-node-debug.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-node-debug/issues"},"devDependencies":{"@types/mocha":"5.2.5","@types/node":"8.10.25","@types/source-map":"0.5.7","gulp":"3.9.1","gulp-util":"3.0.8","gulp-typescript":"3.2.2","gulp-tsb":"2.0.5","gulp-sourcemaps":"2.6.4","gulp-filter":"5.1.0","gulp-tslint":"8.1.3","gulp-uglify":"2.0.0","tslint-microsoft-contrib":"5.2.0","del":"3.0.0","run-sequence":"2.2.1","mocha":"5.2.0","tslint":"5.11.0","tsutils":"3.0.0","typescript":"2.9.2","vscode":"1.1.21","vscode-nls-dev":"3.2.3","vscode-debugadapter-testsupport":"1.32.0","vscode-debugprotocol":"1.32.0","nodemon":"1.18.3","vsce":"1.52.0","ts-loader":"^5.2.2","webpack":"^4.21.0","webpack-cli":"^3.1.2","copy-webpack-plugin":"^4.5.3"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug/dist/extension.js","activationEvents":["onDebugInitialConfigurations","onDebugResolve:node","onCommand:extension.pickNodeProcess","onCommand:extension.node-debug.toggleSkippingFile","onCommand:extension.node-debug.pickLoadedScript","onCommand:extension.node-debug.attachNodeProcess","onCommand:extension.node-debug.startAutoAttach","onCommand:extension.node-debug.startWithStopOnEntry"],"contributes":{"menus":{"debug/callstack/context":[{"command":"extension.node-debug.toggleSkippingFile","group":"navigation","when":"inDebugMode && debugType == 'node' && callStackItemType == 'stackFrame'"}]},"commands":[{"command":"extension.node-debug.pickLoadedScript","title":"Open Loaded Script","category":"Debug"},{"command":"extension.node-debug.attachNodeProcess","title":"Attach to Node Process","category":"Debug"},{"command":"extension.node-debug.toggleSkippingFile","title":"Toggle Skipping this File","category":"Debug"},{"command":"extension.node-debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug"}],"keybindings":[{"command":"extension.node-debug.pickLoadedScript","key":"ctrl+f4","mac":"cmd+f4","when":"debugType == 'node'"},{"command":"extension.node-debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"!inDebugMode && debugConfigurationType=='node'"},{"command":"extension.node-debug.startWithStopOnEntry","mac":"F11","when":"!inDebugMode && debugConfigurationType=='node'"}],"breakpoints":[{"language":"javascript"},{"language":"javascriptreact"}],"debuggers":[{"type":"node","label":"Node.js","program":"./dist/nodeDebug.js","runtime":"node","variables":{"PickProcess":"extension.pickNodeProcess"},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","languages":["javascript","typescript","javascriptreact","typescriptreact"],"configurationSnippets":[{"label":"Node.js: Launch Program","description":"Launch a node program in debug mode","body":{"type":"node","request":"launch","name":"${2:Launch Program}","program":"^\"\\${workspaceFolder}/${1:app.js}\""}},{"label":"Node.js: Launch via NPM","markdownDescription":"Launch a node program through an npm `debug` script","body":{"type":"node","request":"launch","name":"${1:Launch via NPM}","runtimeExecutable":"npm","runtimeArgs":["run-script","debug"],"port":9229}},{"label":"Node.js: Attach","description":"Attach to a running node program","body":{"type":"node","request":"attach","name":"${1:Attach}","port":9229}},{"label":"Node.js: Attach to Remote Program","description":"Attach to the debug port of a remote node program","body":{"type":"node","request":"attach","name":"${1:Attach to Remote}","address":"${2:TCP/IP address of process to be debugged}","port":9229,"localRoot":"^\"\\${workspaceFolder}\"","remoteRoot":"${3:Absolute path to the remote directory containing the program}"}},{"label":"Node.js: Attach to Process","description":"Open process picker to select node process to attach to","body":{"type":"node","request":"attach","name":"${1:Attach by Process ID}","processId":"^\"\\${command:PickProcess}\""}},{"label":"Node.js: Nodemon Setup","description":"Use nodemon to relaunch a debug session on source changes","body":{"type":"node","request":"launch","name":"nodemon","runtimeExecutable":"nodemon","program":"^\"\\${workspaceFolder}/${1:app.js}\"","restart":true,"console":"integratedTerminal","internalConsoleOptions":"neverOpen"}},{"label":"Node.js: Mocha Tests","description":"Debug mocha tests","body":{"type":"node","request":"launch","name":"Mocha Tests","program":"^\"\\${workspaceFolder}/node_modules/mocha/bin/_mocha\"","args":["-u","tdd","--timeout","999999","--colors","^\"\\${workspaceFolder}/${1:test}\""],"internalConsoleOptions":"openOnSessionStart"}},{"label":"Node.js: Yeoman generator","markdownDescription":"Debug yeoman generator (install by running `npm link` in project folder)","body":{"type":"node","request":"launch","name":"Yeoman ${1:generator}","program":"^\"\\${workspaceFolder}/node_modules/yo/lib/cli.js\"","args":["${1:generator}"],"console":"integratedTerminal","internalConsoleOptions":"neverOpen"}},{"label":"Node.js: Gulp task","description":"Debug gulp task (make sure to have a local gulp installed in your project)","body":{"type":"node","request":"launch","name":"Gulp ${1:task}","program":"^\"\\${workspaceFolder}/node_modules/gulp/bin/gulp.js\"","args":["${1:task}"]}},{"label":"Node.js: Electron Main","description":"Debug the Electron main process","body":{"type":"node","request":"launch","name":"Electron Main","runtimeExecutable":"^\"\\${workspaceFolder}/node_modules/.bin/electron\"","program":"^\"\\${workspaceFolder}/main.js\""}}],"configurationAttributes":{"launch":{"properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"externalConsole":{"type":"boolean","deprecationMessage":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"useWSL":{"type":"boolean","description":"Use Windows Subsystem for Linux.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"externalConsole":{"type":"boolean","deprecationMessage":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node"},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"useWSL":{"type":"boolean","description":"Use Windows Subsystem for Linux.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"externalConsole":{"type":"boolean","deprecationMessage":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node"},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"useWSL":{"type":"boolean","description":"Use Windows Subsystem for Linux.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"externalConsole":{"type":"boolean","deprecationMessage":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node"},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"useWSL":{"type":"boolean","description":"Use Windows Subsystem for Linux.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"},"attach":{"properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}"},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}"},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"protocol":{"type":"string","enum":["auto","inspector","legacy"],"enumDescriptions":["Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+","New protocol supported by Node.js versions >= 6.3","Old protocol supported by Node.js versions < 8.0"],"description":"Node.js debug protocol to use.","default":"inspector"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}"},"port":{"type":"number","description":"Debug port to attach to. Default is 5858.","default":9229},"address":{"type":"string","description":"TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","markdownDescription":"An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.","items":{"type":"string"},"default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack. 'inspector' protocol only.","default":true},"trace":{"type":["boolean","string"],"description":"Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.","default":true},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack:///./~/*":"${workspaceRoot}/node_modules/*","webpack:///./*":"${workspaceRoot}/*","webpack:///*":"*"}},"type":{"enum":["node"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}}}]},"uuid":"b6ded8fb-a0a0-4c1c-acbd-ab2a3bc995a6","isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.node-debug","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug","scheme":"file"}},{"name":"node-debug2","displayName":"Node Debug","version":"1.29.5","publisher":"ms-vscode","description":"Node.js debugging support","icon":"images/node-debug-icon.png","categories":["Debuggers"],"author":{"name":"Microsoft Corporation"},"license":"MIT","private":true,"dependencies":{"vscode-chrome-debug-core":"^6.7.31","vscode-debugadapter":"^1.33.0-pre.2","vscode-nls":"^3.2.5"},"devDependencies":{"@types/mocha":"^2.2.47","@types/node":"^8.0.58","del":"^2.2.2","event-stream":"^3.3.4","find-free-port":"^1.0.2","gulp":"^3.9.1","gulp-sourcemaps":"^2.6.4","gulp-tslint":"^8.1.2","gulp-typescript":"^3.1.3","gulp-util":"^3.0.5","minimist":"^1.2.0","mocha":"^5.0.0","run-sequence":"^1.2.2","tslint":"^5.7.0","typescript":"^2.6.2","vsce":"^1.47.0","vscode":"^1.1.21","vscode-chrome-debug-core-testsupport":"^4.0.0","vscode-debugadapter-testsupport":"^1.25.0","vscode-debugprotocol":"^1.32.0-pre.0","vscode-nls-dev":"^3.2.2"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug2/out/src/extension","activationEvents":["onCommand:extension.node-debug2.toggleSkippingFile"],"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","build":"gulp build","watch":"gulp watch","test":"mocha --timeout 20000 -s 2000 -u tdd --colors --reporter node_modules/vscode-chrome-debug-core-testsupport/out/loggingReporter.js ./out/test/","vscode:prepublish":"gulp verify-no-linked-modules && gulp build","tslint":"gulp tslint","publish":"gulp publish","patch":"npm version patch -m '%s'","minor":"npm version minor -m '%s'","package":"gulp package"},"engines":{"vscode":"^1.19.0","node":">=6.3.0"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-node-debug2.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-node-debug2/issues"},"contributes":{"breakpoints":[{"language":"javascript"},{"language":"javascriptreact"}],"debuggers":[{"type":"extensionHost","label":"VS Code Extension Development","program":"./out/src/nodeDebug.js","runtime":"node","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationSnippets":[{"label":"VS Code Extension Development","description":"Launch a VS Code extension in debug mode","body":{"type":"extensionHost","request":"launch","name":"Launch Extension","runtimeExecutable":"^\"\\${execPath}\"","args":["^\"--extensionDevelopmentPath=\\${workspaceFolder}\""],"outFiles":["^\"\\${workspaceFolder}/out/**/*.js\""],"preLaunchTask":"npm"}}],"configurationAttributes":{"launch":{"required":["name","type","request","runtimeExecutable","args"],"properties":{"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Absolute path to VS Code.","default":"${execPath}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":["--extensionDevelopmentPath=${workspaceFolder}"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the extension host.","default":{},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","description":"Automatically stop the extension host after launch.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":"${workspaceFolder}/out","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":["${workspaceFolder}/out/**/*.js"],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"type":["boolean","string"],"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["extensionHost"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Absolute path to VS Code.","default":"${execPath}"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":["--extensionDevelopmentPath=${workspaceFolder}"]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the extension host.","default":{}},"stopOnEntry":{"type":"boolean","description":"Automatically stop the extension host after launch.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":"${workspaceFolder}/out"},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":["${workspaceFolder}/out/**/*.js"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","items":{"type":"string"},"default":[]},"trace":{"type":["boolean","string"],"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["extensionHost"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Absolute path to VS Code.","default":"${execPath}"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":["--extensionDevelopmentPath=${workspaceFolder}"]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the extension host.","default":{}},"stopOnEntry":{"type":"boolean","description":"Automatically stop the extension host after launch.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":"${workspaceFolder}/out"},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":["${workspaceFolder}/out/**/*.js"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","items":{"type":"string"},"default":[]},"trace":{"type":["boolean","string"],"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["extensionHost"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Absolute path to VS Code.","default":"${execPath}"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":["--extensionDevelopmentPath=${workspaceFolder}"]},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the extension host.","default":{}},"stopOnEntry":{"type":"boolean","description":"Automatically stop the extension host after launch.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":"${workspaceFolder}/out"},"outFiles":{"type":"array","markdownDescription":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":["${workspaceFolder}/out/**/*.js"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","items":{"type":"string"},"default":[]},"trace":{"type":["boolean","string"],"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["extensionHost"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false,"type":"object"}}},{"type":"node2","label":"Node.js v6.3+","program":"./out/src/nodeDebug.js","runtime":"node","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"required":["name","type","request","cwd"],"properties":{"program":{"type":"string","description":"Absolute path to the program.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged.","default":"${workspaceFolder}"},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.","default":null},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: The debug API, or stdout/stderr streams.","default":"console"},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false,"type":"object"},"attach":{"properties":{"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"localRoot":{"type":["string","null"],"description":"The local source root that corresponds to the 'remoteRoot'.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"remoteRoot":{"type":["string","null"],"description":"The source root of the remote host.","default":null,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"The local source root that corresponds to the 'remoteRoot'.","default":null},"remoteRoot":{"type":["string","null"],"description":"The source root of the remote host.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"The local source root that corresponds to the 'remoteRoot'.","default":null},"remoteRoot":{"type":["string","null"],"description":"The source root of the remote host.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"address":{"type":"string","description":"TCP/IP address of debug port. Default is 'localhost'.","default":"localhost"},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"restart":{"type":"boolean","description":"Restart session after Node.js has terminated.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"outDir":{"type":["string","null"],"deprecationMessage":"Attribute 'outDir' is deprecated, use 'outFiles' instead.","default":null},"outFiles":{"type":"array","description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"default":[]},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":true},"localRoot":{"type":["string","null"],"description":"The local source root that corresponds to the 'remoteRoot'.","default":null},"remoteRoot":{"type":["string","null"],"description":"The source root of the remote host.","default":null},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"diagnosticLogging":{"type":"boolean","description":"When true, the adapter logs its own diagnostic info to the console","default":true,"deprecationMessage":"'diagnosticLogging' is deprecated. Use 'trace' instead."},"verboseDiagnosticLogging":{"type":"boolean","description":"When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')","default":true,"deprecationMessage":"'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{}},"skipFiles":{"type":"array","description":"An array of file or folder names, or glob patterns, to skip when debugging.","default":[]},"showAsyncStacks":{"type":"boolean","description":"Show the async calls that led to the current call stack.","default":true},"enableSourceMapCaching":{"type":"boolean","description":"When sourcemaps are downloaded from a URL, cache them to disk.","default":true},"type":{"enum":["node2"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"required":["name","type","request"],"additionalProperties":false,"type":"object"}}}],"menus":{"debug/callstack/context":[{"command":"extension.node-debug2.toggleSkippingFile","group":"navigation","when":"inDebugMode && debugType == 'node2' && callStackItemType == 'stackFrame'"}]},"commands":[{"command":"extension.node-debug2.toggleSkippingFile","title":"Toggle Skipping this File"}],"keybindings":[{"command":"extension.node-debug.pickLoadedScript","key":"ctrl+f4","mac":"cmd+f4","when":"debugType == 'node2'"}]},"uuid":"36d19e17-7569-4841-a001-947eb18602b2","isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.node-debug2","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug2","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.node-debug2","scheme":"file"}},{"name":"references-view","displayName":"Reference Search View","icon":"media/icon.png","description":"Reference Search results as separate, stable view in the sidebar","version":"0.0.8","publisher":"ms-vscode","engines":{"vscode":"^1.29.0"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-reference-view"},"bugs":{"url":"https://github.com/Microsoft/vscode-reference-view/issues"},"categories":["Programming Languages"],"activationEvents":["onCommand:references-view.find","onView:references-view.tree"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.references-view/out/src/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"references-view","icon":"./media/container-icon.svg","title":"Reference Search"}]},"views":{"references-view":[{"id":"references-view.tree","name":"Results","when":"reference-list.hasResult"}]},"commands":[{"command":"references-view.find","title":"List All References","category":"References"},{"command":"references-view.clear","title":"Clear Reference Results","category":"References","icon":{"dark":"./media/action-clear-dark.svg","light":"./media/action-clear.svg"}},{"command":"references-view.refresh","title":"Refresh Reference Results","category":"References","icon":{"dark":"./media/action-refresh-dark.svg","light":"./media/action-refresh.svg"}},{"command":"references-view.remove","title":"Remove Reference from List","icon":{"dark":"./media/action-remove-dark.svg","light":"./media/action-remove.svg"}}],"menus":{"editor/context":[{"command":"references-view.find","when":"editorHasReferenceProvider","group":"navigation@1.51"}],"view/title":[{"command":"references-view.refresh","group":"navigation","when":"view == references-view.tree && reference-list.hasResult"},{"command":"references-view.clear","group":"navigation","when":"view == references-view.tree && reference-list.hasResult"}],"view/item/context":[{"command":"references-view.remove","group":"inline","when":"view == references-view.tree && viewItem == reference-item"}],"commandPalette":[{"command":"references-view.remove","when":"never"},{"command":"references-view.find","when":"editorHasReferenceProvider"},{"command":"references-view.clear","when":"reference-list.hasResult"},{"command":"references-view.refresh","when":"reference-list.hasResult"}]},"keybindings":[{"command":"references-view.find","when":"editorHasReferenceProvider","key":"shift+alt+f12"},{"command":"references-view.showNextReference","when":"reference-list.hasResult","key":"f4"},{"command":"references-view.showPrevReference","when":"reference-list.hasResult","key":"shift+f4"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.5.2","vscode":"^1.1.5","@types/node":"^7.0.43"},"uuid":"36d19e17-7569-4841-a001-947eb18602b2","isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.references-view","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.references-view","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ms-vscode.references-view","scheme":"file"},"enableProposedApi":true},{"name":"npm","publisher":"vscode","displayName":"Npm support for VS Code","description":"Extension to add task support for npm scripts.","version":"1.0.1","engines":{"vscode":"0.10.x"},"icon":"images/npm_icon.png","categories":["Other"],"scripts":{"compile":"gulp compile-extension:npm","watch":"gulp watch-extension:npm"},"dependencies":{"jsonc-parser":"^2.0.2","minimatch":"^3.0.4","request-light":"^0.2.4","vscode-nls":"^4.0.0"},"devDependencies":{"@types/minimatch":"^3.0.3","@types/node":"^8.10.25"},"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/npm/dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask","onLanguage:json","onView:npm"],"contributes":{"languages":[{"id":"ignore","filenames":[".npmignore"]}],"views":{"explorer":[{"id":"npm","name":"Npm Scripts","when":"config.npm.enableScriptExplorer"}]},"commands":[{"command":"npm.runScript","title":"Run","icon":{"light":"resources/light/continue.svg","dark":"resources/dark/continue.svg"}},{"command":"npm.debugScript","title":"Debug","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"npm.openScript","title":"Open"},{"command":"npm.runInstall","title":"Run Install"},{"command":"npm.refresh","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"npm.runSelectedScript","title":"Run Script"}],"menus":{"commandPalette":[{"command":"npm.refresh","when":"false"},{"command":"npm.runScript","when":"false"},{"command":"npm.debugScript","when":"false"},{"command":"npm.openScript","when":"false"},{"command":"npm.runInstall","when":"false"},{"command":"npm.runSelectedScript","when":"false"}],"editor/context":[{"command":"npm.runSelectedScript","when":"resourceFilename == 'package.json'","group":"navigation@+1"}],"view/title":[{"command":"npm.refresh","when":"view == npm","group":"navigation"}],"view/item/context":[{"command":"npm.openScript","when":"view == npm && viewItem == packageJSON","group":"navigation@1"},{"command":"npm.runInstall","when":"view == npm && viewItem == packageJSON","group":"navigation@2"},{"command":"npm.openScript","when":"view == npm && viewItem == script","group":"navigation@1"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"navigation@2"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"inline"},{"command":"npm.runScript","when":"view == npm && viewItem == debugScript","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == debugScript","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == script","group":"navigation@3"}]},"configuration":{"id":"npm","type":"object","title":"Npm","properties":{"npm.autoDetect":{"type":"string","enum":["off","on"],"default":"on","scope":"resource","description":"Controls whether npm scripts should be automatically detected."},"npm.runSilent":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Run npm commands with the `--silent` option."},"npm.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn"],"default":"npm","description":"The package manager used to run scripts."},"npm.exclude":{"type":["string","array"],"items":{"type":"string"},"description":"Configure glob patterns for folders that should be excluded from automatic script detection.","scope":"resource"},"npm.enableScriptExplorer":{"type":"boolean","default":false,"scope":"resource","description":"Enable an explorer view for npm scripts."},"npm.scriptExplorerAction":{"type":"string","enum":["open","run"],"markdownDescription":"The default click action used in the scripts explorer: `open` or `run`, the default is `open`.","scope":"window","default":"open"},"npm.fetchOnlinePackageInfo":{"type":"boolean","description":"Fetch data from https://registry.npmjs/org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.","default":true,"scope":"window","tags":["usesOnlineServices"]}}},"jsonValidation":[{"fileMatch":"package.json","url":"https://schemastore.azurewebsites.net/schemas/json/package.json"},{"fileMatch":"bower.json","url":"https://schemastore.azurewebsites.net/schemas/json/bower.json"}],"taskDefinitions":[{"type":"npm","required":["script"],"properties":{"script":{"type":"string","description":"The npm script to customize."},"path":{"type":"string","description":"The path to the folder of the package.json file that provides the script. Can be omitted."}}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.npm","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/npm","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/npm","scheme":"file"}},{"name":"objective-c","displayName":"Objective-C Language Basics","description":"Provides syntax highlighting and bracket matching in Objective-C files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-objective-c grammars/objective-c.cson ./syntaxes/objective-c.tmLanguage.json && node ../../build/npm/update-grammar.js atom/language-objective-c grammars/objective-c%2B%2B.cson ./syntaxes/objective-c++.tmLanguage.json"},"contributes":{"languages":[{"id":"objective-c","extensions":[".m"],"aliases":["Objective-C"],"configuration":"./language-configuration.json"},{"id":"objective-cpp","extensions":[".mm"],"aliases":["Objective-C++"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"objective-c","scopeName":"source.objc","path":"./syntaxes/objective-c.tmLanguage.json"},{"language":"objective-cpp","scopeName":"source.objcpp","path":"./syntaxes/objective-c++.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.objective-c","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/objective-c","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/objective-c","scheme":"file"}},{"name":"perl","displayName":"Perl Language Basics","description":"Provides syntax highlighting and bracket matching in Perl files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/perl.tmbundle Syntaxes/Perl.plist ./syntaxes/perl.tmLanguage.json Syntaxes/Perl%206.tmLanguage ./syntaxes/perl6.tmLanguage.json"},"contributes":{"languages":[{"id":"perl","aliases":["Perl","perl"],"extensions":[".pl",".pm",".pod",".t",".PL",".psgi"],"firstLine":"^#!.*\\bperl\\b","configuration":"./perl.language-configuration.json"},{"id":"perl6","aliases":["Perl 6","perl6"],"extensions":[".p6",".pl6",".pm6",".nqp"],"firstLine":"(^#!.*\\bperl6\\b)|use\\s+v6","configuration":"./perl6.language-configuration.json"}],"grammars":[{"language":"perl","scopeName":"source.perl","path":"./syntaxes/perl.tmLanguage.json"},{"language":"perl6","scopeName":"source.perl.6","path":"./syntaxes/perl6.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.perl","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/perl","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/perl","scheme":"file"}},{"name":"php","displayName":"PHP Language Basics","description":"Provides syntax highlighting and bracket matching for PHP files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"contributes":{"languages":[{"id":"php","extensions":[".php",".php4",".php5",".phtml",".ctp"],"aliases":["PHP","php"],"firstLine":"^#!\\s*/.*\\bphp\\b","mimetypes":["application/x-php"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"php","scopeName":"source.php","path":"./syntaxes/php.tmLanguage.json"},{"language":"php","scopeName":"text.html.php","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.php":"php","source.sql":"sql","text.xml":"xml","source.js":"javascript","source.json":"json","source.css":"css"}}],"snippets":[{"language":"php","path":"./snippets/php.snippets.json"}]},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.php","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/php","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/php","scheme":"file"}},{"name":"php-language-features","displayName":"PHP Language Features","description":"Provides rich language support for PHP files.","version":"1.0.0","publisher":"vscode","icon":"icons/logo.png","engines":{"vscode":"0.10.x"},"activationEvents":["onLanguage:php"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/php-language-features/dist/phpMain","categories":["Programming Languages"],"contributes":{"configuration":{"title":"PHP","type":"object","order":20,"properties":{"php.suggest.basic":{"type":"boolean","default":true,"description":"Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables."},"php.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable built-in PHP validation."},"php.validate.executablePath":{"type":["string","null"],"default":null,"description":"Points to the PHP executable."},"php.validate.run":{"type":"string","enum":["onSave","onType"],"default":"onSave","description":"Whether the linter is run on save or on type."}}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://getcomposer.org/schema.json"}],"commands":[{"title":"Disallow PHP validation executable (defined as workspace setting)","category":"PHP","command":"php.untrustValidationExecutable"}],"menus":{"commandPalette":[{"command":"php.untrustValidationExecutable","when":"php.untrustValidationExecutableContext"}]}},"scripts":{"compile":"npx gulp compile-extension:php-language-features","watch":"npx gulp watch-extension:php-language-features"},"dependencies":{"vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"^8.10.25"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.php-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/php-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/php-language-features","scheme":"file"}},{"name":"powershell","displayName":"Powershell Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Powershell files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"languages":[{"id":"powershell","extensions":[".ps1",".psm1",".psd1",".pssc",".psrc"],"aliases":["PowerShell","powershell","ps","ps1"],"firstLine":"^#!\\s*/.*\\bpwsh\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"powershell","scopeName":"source.powershell","path":"./syntaxes/powershell.tmLanguage.json"}],"snippets":[{"language":"powershell","path":"./snippets/powershell.json"}]},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js PowerShell/EditorSyntax PowerShellSyntax.tmLanguage ./syntaxes/powershell.tmLanguage.json"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.powershell","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/powershell","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/powershell","scheme":"file"}},{"name":"pug","displayName":"Pug Language Basics","description":"Provides syntax highlighting and bracket matching in Pug files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js davidrios/pug-tmbundle Syntaxes/Pug.JSON-tmLanguage ./syntaxes/pug.tmLanguage.json"},"contributes":{"languages":[{"id":"jade","extensions":[".jade",".pug"],"aliases":["Pug","Jade","jade"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"jade","scopeName":"text.pug","path":"./syntaxes/pug.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.pug","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/pug","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/pug","scheme":"file"}},{"name":"python","displayName":"Python Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Python files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"activationEvents":["onLanguage:python"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/python/out/pythonMain","contributes":{"languages":[{"id":"python","extensions":[".py",".rpy",".pyw",".cpy",".gyp",".gypi",".snakefile",".smk"],"aliases":["Python","py"],"firstLine":"^#!\\s*/.*\\bpython[0-9.-]*\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"python","scopeName":"source.python","path":"./syntaxes/MagicPython.tmLanguage.json"},{"scopeName":"source.regexp.python","path":"./syntaxes/MagicRegExp.tmLanguage.json"}]},"scripts":{"compile":"gulp compile-extension:python","watch":"gulp watch-extension:python","update-grammar":"node ../../build/npm/update-grammar.js MagicStack/MagicPython grammars/MagicPython.tmLanguage ./syntaxes/MagicPython.tmLanguage.json grammars/MagicRegExp.tmLanguage ./syntaxes/MagicRegExp.tmLanguage.json"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.python","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/python","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/python","scheme":"file"}},{"name":"r","displayName":"R Language Basics","description":"Provides syntax highlighting and bracket matching in R files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js Ikuyadeu/vscode-R syntax/r.json ./syntaxes/r.tmLanguage.json"},"contributes":{"languages":[{"id":"r","extensions":[".r",".rhistory",".rprofile",".rt"],"aliases":["R","r"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"r","scopeName":"source.r","path":"./syntaxes/r.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.r","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/r","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/r","scheme":"file"}},{"name":"razor","displayName":"Razor Language Basics","description":"Provides syntax highlighting, bracket matching and folding in Razor files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js demyte/language-cshtml grammars/cshtml.json ./syntaxes/cshtml.tmLanguage.json"},"contributes":{"languages":[{"id":"razor","extensions":[".cshtml"],"aliases":["Razor","razor"],"mimetypes":["text/x-cshtml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"razor","scopeName":"text.html.cshtml","path":"./syntaxes/cshtml.tmLanguage.json","embeddedLanguages":{"section.embedded.source.cshtml":"csharp","source.css":"css","source.js":"javascript"}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.razor","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/razor","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/razor","scheme":"file"}},{"name":"ruby","displayName":"Ruby Language Basics","description":"Provides syntax highlighting and bracket matching in Ruby files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/ruby.tmbundle Syntaxes/Ruby.plist ./syntaxes/ruby.tmLanguage.json"},"contributes":{"languages":[{"id":"ruby","extensions":[".rb",".rbx",".rjs",".gemspec",".rake",".ru",".erb"],"filenames":["rakefile","gemfile","guardfile","podfile","capfile"],"aliases":["Ruby","rb"],"firstLine":"^#!\\s*/.*\\bruby\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"ruby","scopeName":"source.ruby","path":"./syntaxes/ruby.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.ruby","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ruby","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/ruby","scheme":"file"}},{"name":"rust","displayName":"Rust Language Basics","description":"Provides syntax highlighting and bracket matching in Rust files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js zargony/atom-language-rust grammars/rust.cson ./syntaxes/rust.tmLanguage.json"},"contributes":{"languages":[{"id":"rust","extensions":[".rs"],"aliases":["Rust","rust"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"rust","path":"./syntaxes/rust.tmLanguage.json","scopeName":"source.rust"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.rust","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/rust","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/rust","scheme":"file"}},{"name":"scss","displayName":"SCSS Language Basics","description":"Provides syntax highlighting, bracket matching and folding in SCSS files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-sass grammars/scss.cson ./syntaxes/scss.tmLanguage.json grammars/sassdoc.cson ./syntaxes/sassdoc.tmLanguage.json"},"contributes":{"languages":[{"id":"scss","aliases":["SCSS","scss"],"extensions":[".scss"],"mimetypes":["text/x-scss","text/scss"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"scss","scopeName":"source.css.scss","path":"./syntaxes/scss.tmLanguage.json"},{"scopeName":"source.sassdoc","path":"./syntaxes/sassdoc.tmLanguage.json"}],"problemMatchers":[{"name":"node-sass","label":"Node Sass Compiler","owner":"node-sass","fileLocation":"absolute","pattern":[{"regexp":"^{$"},{"regexp":"\\s*\"status\":\\s\\d+,"},{"regexp":"\\s*\"file\":\\s\"(.*)\",","file":1},{"regexp":"\\s*\"line\":\\s(\\d+),","line":1},{"regexp":"\\s*\"column\":\\s(\\d+),","column":1},{"regexp":"\\s*\"message\":\\s\"(.*)\",","message":1},{"regexp":"\\s*\"formatted\":\\s(.*)"},{"regexp":"^}$"}]}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.scss","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/scss","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/scss","scheme":"file"}},{"name":"shaderlab","displayName":"Shaderlab Language Basics","description":"Provides syntax highlighting and bracket matching in Shaderlab files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js tgjones/shaders-tmLanguage grammars/shaderlab.json ./syntaxes/shaderlab.tmLanguage.json"},"contributes":{"languages":[{"id":"shaderlab","extensions":[".shader"],"aliases":["ShaderLab","shaderlab"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"shaderlab","path":"./syntaxes/shaderlab.tmLanguage.json","scopeName":"source.shaderlab"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.shaderlab","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/shaderlab","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/shaderlab","scheme":"file"}},{"name":"shellscript","displayName":"Shell Script Language Basics","description":"Provides syntax highlighting and bracket matching in Shell Script files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-shellscript grammars/shell-unix-bash.cson ./syntaxes/shell-unix-bash.tmLanguage.json"},"contributes":{"languages":[{"id":"shellscript","aliases":["Shell Script","shellscript","bash","sh","zsh"],"extensions":[".sh",".bash",".bashrc",".bash_aliases",".bash_profile",".bash_login",".ebuild",".install",".profile",".bash_logout",".zsh",".zshrc",".zprofile",".zlogin",".zlogout",".zshenv",".zsh-theme"],"filenames":["PKGBUILD"],"firstLine":"^#!.*\\b(bash|zsh|sh|tcsh).*|^#\\s*-\\*-[^*]*mode:\\s*shell-script[^*]*-\\*-","configuration":"./language-configuration.json","mimetypes":["text/x-shellscript"]}],"grammars":[{"language":"shellscript","scopeName":"source.shell","path":"./syntaxes/shell-unix-bash.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.shellscript","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/shellscript","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/shellscript","scheme":"file"}},{"name":"sql","displayName":"SQL Language Basics","description":"Provides syntax highlighting and bracket matching in SQL files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js Microsoft/vscode-mssql syntaxes/SQL.plist ./syntaxes/sql.tmLanguage.json"},"contributes":{"languages":[{"id":"sql","extensions":[".sql",".dsql"],"aliases":["SQL"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"sql","scopeName":"source.sql","path":"./syntaxes/sql.tmLanguage.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.sql","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/sql","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/sql","scheme":"file"}},{"name":"swift","displayName":"Swift Language Basics","description":"Provides snippets, syntax highlighting and bracket matching in Swift files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/swift.tmbundle Syntaxes/Swift.tmLanguage ./syntaxes/swift.tmLanguage.json"},"contributes":{"languages":[{"id":"swift","aliases":["Swift","swift"],"extensions":[".swift"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"swift","scopeName":"source.swift","path":"./syntaxes/swift.tmLanguage.json"}],"snippets":[{"language":"swift","path":"./snippets/swift.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.swift","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/swift","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/swift","scheme":"file"}},{"name":"theme-abyss","displayName":"Abyss Theme","description":"Abyss theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Abyss","uiTheme":"vs-dark","path":"./themes/abyss-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-abyss","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-abyss","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-abyss","scheme":"file"}},{"name":"theme-defaults","displayName":"Default Themes","description":"The default Visual Studio light and dark themes","categories":["Themes"],"version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Default Dark+","label":"Dark+ (default dark)","uiTheme":"vs-dark","path":"./themes/dark_plus.json"},{"id":"Default Light+","label":"Light+ (default light)","uiTheme":"vs","path":"./themes/light_plus.json"},{"id":"Visual Studio Dark","label":"Dark (Visual Studio)","uiTheme":"vs-dark","path":"./themes/dark_vs.json"},{"id":"Visual Studio Light","label":"Light (Visual Studio)","uiTheme":"vs","path":"./themes/light_vs.json"},{"id":"Default High Contrast","label":"High Contrast","uiTheme":"hc-black","path":"./themes/hc_black.json"}],"iconThemes":[{"id":"vs-minimal","label":"Minimal (Visual Studio Code)","path":"./fileicons/vs_minimal-icon-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-defaults","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-defaults","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-defaults","scheme":"file"}},{"name":"theme-kimbie-dark","displayName":"Kimbie Dark Theme","description":"Kimbie dark theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Kimbie Dark","uiTheme":"vs-dark","path":"./themes/kimbie-dark-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-kimbie-dark","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-kimbie-dark","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-kimbie-dark","scheme":"file"}},{"name":"theme-monokai","displayName":"Monokai Theme","description":"Monokai theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Monokai","uiTheme":"vs-dark","path":"./themes/monokai-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-monokai","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-monokai","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-monokai","scheme":"file"}},{"name":"theme-monokai-dimmed","displayName":"Monokai Dimmed Theme","description":"Monokai dimmed theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Monokai Dimmed","uiTheme":"vs-dark","path":"./themes/dimmed-monokai-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-monokai-dimmed","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-monokai-dimmed","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-monokai-dimmed","scheme":"file"}},{"name":"theme-quietlight","displayName":"Quiet Light Theme","description":"Quiet light theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Quiet Light","uiTheme":"vs","path":"./themes/quietlight-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-quietlight","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-quietlight","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-quietlight","scheme":"file"}},{"name":"theme-red","displayName":"Red Theme","description":"Red theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Red","uiTheme":"vs-dark","path":"./themes/Red-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-red","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-red","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-red","scheme":"file"}},{"name":"vscode-theme-seti","private":true,"version":"1.0.0","displayName":"Seti File Icon Theme","description":"A file icon theme made out of the Seti UI file icons","publisher":"vscode","icon":"icons/seti-circular-128x128.png","scripts":{"update":"node ./build/update-icon-theme.js"},"engines":{"vscode":"*"},"contributes":{"iconThemes":[{"id":"vs-seti","label":"Seti (Visual Studio Code)","path":"./icons/vs-seti-icon-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.vscode-theme-seti","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-seti","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-seti","scheme":"file"}},{"name":"theme-solarized-dark","displayName":"Solarized Dark Theme","description":"Solarized dark theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Solarized Dark","uiTheme":"vs-dark","path":"./themes/solarized-dark-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-solarized-dark","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-solarized-dark","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-solarized-dark","scheme":"file"}},{"name":"theme-solarized-light","displayName":"Solarized Light Theme","description":"Solarized light theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Solarized Light","uiTheme":"vs","path":"./themes/solarized-light-color-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-solarized-light","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-solarized-light","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-solarized-light","scheme":"file"}},{"name":"theme-tomorrow-night-blue","displayName":"Tomorrow Night Blue Theme","description":"Tomorrow night blue theme for Visual Studio Code","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"themes":[{"label":"Tomorrow Night Blue","uiTheme":"vs-dark","path":"./themes/tomorrow-night-blue-theme.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-tomorrow-night-blue","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-tomorrow-night-blue","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/theme-tomorrow-night-blue","scheme":"file"}},{"name":"typescript","description":"Provides snippets, syntax highlighting, bracket matching and folding in TypeScript files.","displayName":"TypeScript Language Basics","version":"1.0.0","author":"vscode","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"typescript","aliases":["TypeScript","ts","typescript"],"extensions":[".ts"],"configuration":"./language-configuration.json"},{"id":"typescriptreact","aliases":["TypeScript React","tsx"],"extensions":[".tsx"],"configuration":"./language-configuration.json"},{"id":"jsonc","filenames":["tsconfig.json","jsconfig.json"],"filenamePatterns":["tsconfig.*.json","tsconfig-*.json"]}],"grammars":[{"language":"typescript","scopeName":"source.ts","path":"./syntaxes/TypeScript.tmLanguage.json","tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"typescriptreact","scopeName":"source.tsx","path":"./syntaxes/TypeScriptReact.tmLanguage.json","embeddedLanguages":{"meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","meta.tag.attributes.tsx":"typescriptreact","meta.embedded.expression.tsx":"typescriptreact"},"tokenTypes":{"entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}}],"snippets":[{"language":"typescript","path":"./snippets/typescript.json"},{"language":"typescriptreact","path":"./snippets/typescript.json"}],"jsonValidation":[{"fileMatch":"tsconfig.json","url":"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json"},{"fileMatch":"tsconfig.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig.*.json","url":"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json"},{"fileMatch":"tsconfig-*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig-*.json","url":"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json"},{"fileMatch":"tsconfig.*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"typings.json","url":"https://schemastore.azurewebsites.net/schemas/json/typings.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.typescript","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-basics","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-basics","scheme":"file"}},{"name":"typescript-language-features","description":"Provides rich language support for JavaScript and TypeScript.","displayName":"TypeScript and JavaScript Language Features","version":"1.0.0","icon":"icon.png","author":"vscode","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","enableProposedApi":true,"engines":{"vscode":"*"},"categories":["Programming Languages"],"dependencies":{"jsonc-parser":"^2.0.1","semver":"5.5.1","vscode-extension-telemetry":"0.1.0","vscode-nls":"^4.0.0"},"devDependencies":{"@types/node":"8.0.33","@types/semver":"^5.5.0","vscode":"^1.1.10"},"scripts":{"vscode:prepublish":"node ../../node_modules/gulp/bin/gulp.js --gulpfile ../../build/gulpfile.extensions.js compile-extension:typescript ./tsconfig.json"},"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:jsx-tags","onCommand:typescript.reloadProjects","onCommand:javascript.reloadProjects","onCommand:typescript.selectTypeScriptVersion","onCommand:javascript.goToProjectConfig","onCommand:typescript.goToProjectConfig","onCommand:typescript.openTsServerLog","onCommand:workbench.action.tasks.runTask","onCommand:_typescript.configurePlugin","onLanguage:jsonc"],"main":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-language-features/dist/extension","contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"configuration":{"type":"object","title":"TypeScript","order":20,"properties":{"typescript.tsdk":{"type":["string","null"],"default":null,"description":"Specifies the folder path containing the tsserver and lib*.d.ts files to use.","scope":"window"},"typescript.disableAutomaticTypeAcquisition":{"type":"boolean","default":false,"description":"Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.","scope":"window","tags":["usesOnlineServices"]},"typescript.npm":{"type":["string","null"],"default":null,"description":"Specifies the path to the NPM executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.","scope":"application"},"typescript.check.npmIsInstalled":{"type":"boolean","default":true,"description":"Check if NPM is installed for Automatic Type Acquisition.","scope":"window"},"javascript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens in JavaScript files.","scope":"window"},"typescript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable references CodeLens in TypeScript files.","scope":"window"},"typescript.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.","scope":"window"},"typescript.tsserver.log":{"type":"string","enum":["off","terse","normal","verbose"],"default":"off","description":"Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.","scope":"window"},"typescript.tsserver.pluginPaths":{"type":"array","items":{"type":"string","description":"Either an absolute or relative path. Relative path will be resolved against workspace folder(s)."},"default":[],"description":"Additional paths to discover Typescript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.","scope":"application"},"typescript.tsserver.trace":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.","scope":"window"},"javascript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature.","scope":"resource"},"typescript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature.","scope":"resource"},"typescript.reportStyleChecksAsWarnings":{"type":"boolean","default":true,"description":"Report style checks as warnings.","scope":"window"},"typescript.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable TypeScript validation.","scope":"window"},"typescript.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default TypeScript formatter.","scope":"window"},"typescript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Defines space handling after a comma delimiter.","scope":"resource"},"typescript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.","scope":"resource"},"typescript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":"Defines space handling after a semicolon in a for statement.","scope":"resource"},"typescript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Defines space handling after a binary operator.","scope":"resource"},"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Defines space handling after keywords in a control flow statement.","scope":"resource"},"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Defines space handling after function keyword for anonymous functions.","scope":"resource"},"typescript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Defines space handling before function argument parentheses.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty parenthesis.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty brackets.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing template string braces.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing JSX expression braces.","scope":"resource"},"typescript.format.insertSpaceAfterTypeAssertion":{"type":"boolean","default":false,"description":"Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for functions or not.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for control blocks or not.","scope":"resource"},"javascript.validate.enable":{"type":"boolean","default":true,"description":"Enable/disable JavaScript validation.","scope":"window"},"javascript.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default JavaScript formatter.","scope":"window"},"javascript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Defines space handling after a comma delimiter.","scope":"resource"},"javascript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.","scope":"resource"},"javascript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":"Defines space handling after a semicolon in a for statement.","scope":"resource"},"javascript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Defines space handling after a binary operator.","scope":"resource"},"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Defines space handling after keywords in a control flow statement.","scope":"resource"},"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Defines space handling after function keyword for anonymous functions.","scope":"resource"},"javascript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Defines space handling before function argument parentheses.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty parenthesis.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing non-empty brackets.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing template string braces.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Defines space handling after opening and before closing JSX expression braces.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for functions or not.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Defines whether an open brace is put onto a new line for control blocks or not.","scope":"resource"},"jsDocCompletion.enabled":{"type":"boolean","default":true,"description":"Enable/disable auto JSDoc comments.","scope":"resource"},"javascript.implicitProjectConfig.checkJs":{"type":"boolean","default":false,"description":"Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.","scope":"window"},"javascript.implicitProjectConfig.experimentalDecorators":{"type":"boolean","default":false,"markdownDescription":"Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.","scope":"window"},"javascript.suggest.names":{"type":"boolean","default":true,"description":"Enable/disable including unique names from the file in JavaScript suggestions.","scope":"resource"},"typescript.tsc.autoDetect":{"type":"string","default":"on","enum":["on","off","build","watch"],"markdownEnumDescriptions":["Create both build and watch tasks.","Disable this feature.","Only create single run compile tasks.","Only create compile and watch tasks."],"description":"Controls auto detection of tsc tasks.","scope":"window"},"javascript.suggest.paths":{"type":"boolean","default":true,"description":"Enable/disable suggestions for paths in import statements and require calls.","scope":"resource"},"typescript.suggest.paths":{"type":"boolean","default":true,"description":"Enable/disable suggestions for paths in import statements and require calls.","scope":"resource"},"javascript.suggest.autoImports":{"type":"boolean","default":true,"description":"Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.","scope":"resource"},"typescript.suggest.autoImports":{"type":"boolean","default":true,"description":"Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.","scope":"resource"},"typescript.locale":{"type":["string","null"],"enum":["de","es","en","fr","it","ja","ko","ru","zh-CN","zh-TW",null],"default":null,"markdownDescription":"Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.","scope":"window"},"javascript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Enable/disable suggestion diagnostics for JavaScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.","scope":"resource"},"typescript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.","scope":"resource"},"javascript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.","scope":"resource"},"typescript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.","scope":"resource"},"javascript.preferences.importModuleSpecifier":{"type":"string","enum":["auto","relative","non-relative"],"markdownEnumDescriptions":["Infer the shortest path type.","Relative to the file location.","Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`."],"default":"auto","description":"Preferred path style for auto imports.","scope":"resource"},"typescript.preferences.importModuleSpecifier":{"type":"string","enum":["auto","relative","non-relative"],"markdownEnumDescriptions":["Infer the shortest path type.","Relative to the file location.","Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`."],"default":"auto","description":"Preferred path style for auto imports.","scope":"resource"},"typescript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Prompt on each rename.","Always update paths automatically.","Never rename paths and don't prompt."],"default":"prompt","description":"Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.","scope":"resource"},"javascript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Prompt on each rename.","Always update paths automatically.","Never rename paths and don't prompt."],"default":"prompt","description":"Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.","scope":"resource"},"typescript.autoClosingTags":{"type":"boolean","default":true,"description":"Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace."},"javascript.autoClosingTags":{"type":"boolean","default":true,"description":"Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace."},"javascript.suggest.enabled":{"type":"boolean","default":true,"description":"Enabled/disable autocomplete suggestions.","scope":"resource"},"typescript.suggest.enabled":{"type":"boolean","default":true,"description":"Enabled/disable autocomplete suggestions.","scope":"resource"},"typescript.surveys.enabled":{"type":"boolean","default":true,"description":"Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.","scope":"window"}}},"commands":[{"command":"typescript.reloadProjects","title":"Reload Project","category":"TypeScript"},{"command":"javascript.reloadProjects","title":"Reload Project","category":"JavaScript"},{"command":"typescript.selectTypeScriptVersion","title":"Select TypeScript Version.","category":"TypeScript"},{"command":"typescript.goToProjectConfig","title":"Go to Project Configuration","category":"TypeScript"},{"command":"javascript.goToProjectConfig","title":"Go to Project Configuration","category":"JavaScript"},{"command":"typescript.openTsServerLog","title":"Open TS Server log.","category":"TypeScript"},{"command":"typescript.restartTsServer","title":"Restart TS server.","category":"TypeScript"}],"menus":{"commandPalette":[{"command":"typescript.reloadProjects","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.reloadProjects","when":"editorLangId == typescriptreact && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescriptreact"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.selectTypeScriptVersion","when":"typescript.isManagedFile"},{"command":"typescript.openTsServerLog","when":"typescript.isManagedFile"},{"command":"typescript.restartTsServer","when":"typescript.isManagedFile"}]},"breakpoints":[{"language":"typescript"},{"language":"typescriptreact"}],"taskDefinitions":[{"type":"typescript","required":["tsconfig"],"properties":{"tsconfig":{"type":"string","description":"The tsconfig file that defines the TS build."},"option":{"type":"string"}}}],"problemPatterns":[{"name":"tsc","regexp":"^([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$","file":1,"line":2,"column":3,"severity":4,"code":5,"message":6}],"problemMatchers":[{"name":"tsc","label":"TypeScript problems","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc"},{"name":"tsc-watch","label":"TypeScript problems (watch mode)","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc","background":{"activeOnStart":true,"beginsPattern":{"regexp":"^\\s*(?:message TS6032:|\\[?\\d{1,2}:\\d{1,2}:\\d{1,2}(?: AM| PM| a\\.m\\.| p\\.m\\.)?(?:\\]| -)) File change detected\\. Starting incremental compilation\\.\\.\\."},"endsPattern":{"regexp":"^\\s*(?:message TS6042:|\\[?\\d{1,2}:\\d{1,2}:\\d{1,2}(?: AM| PM| a\\.m\\.| p\\.m\\.)?(?:\\]| -)) (?:Compilation complete\\.|Found \\d+ errors?\\.) Watching for file changes\\."}}}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.typescript-language-features","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-language-features","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-language-features","scheme":"file"}},{"name":"vb","displayName":"Visual Basic Language Basics","description":"Provides snippets, syntax highlighting, bracket matching and folding in Visual Basic files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/asp.vb.net.tmbundle Syntaxes/ASP%20VB.net.plist ./syntaxes/asp-vb-net.tmlanguage.json"},"contributes":{"languages":[{"id":"vb","extensions":[".vb",".brs",".vbs",".bas"],"aliases":["Visual Basic","vb"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vb","scopeName":"source.asp.vb.net","path":"./syntaxes/asp-vb-net.tmlanguage.json"}],"snippets":[{"language":"vb","path":"./snippets/vb.json"}]},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.vb","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/vb","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/vb","scheme":"file"}},{"name":"xml","displayName":"XML Language Basics","description":"Provides syntax highlighting and bracket matching in XML files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"contributes":{"languages":[{"id":"xml","extensions":[".xml",".xsd",".ascx",".atom",".axml",".bpmn",".config",".cpt",".csl",".csproj",".csproj.user",".dita",".ditamap",".dtd",".dtml",".fsproj",".fxml",".iml",".isml",".jmx",".launch",".menu",".mxml",".nuspec",".opml",".owl",".proj",".props",".pt",".publishsettings",".pubxml",".pubxml.user",".rdf",".rng",".rss",".shproj",".storyboard",".svg",".targets",".tld",".tmx",".vbproj",".vbproj.user",".vcxproj",".vcxproj.filters",".wsdl",".wxi",".wxl",".wxs",".xaml",".xbl",".xib",".xlf",".xliff",".xpdl",".xul",".xoml"],"firstLine":"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)","aliases":["XML","xml"],"configuration":"./xml.language-configuration.json"},{"id":"xsl","extensions":[".xsl",".xslt"],"aliases":["XSL","xsl"],"configuration":"./xsl.language-configuration.json"}],"grammars":[{"language":"xml","scopeName":"text.xml","path":"./syntaxes/xml.tmLanguage.json"},{"language":"xsl","scopeName":"text.xml.xsl","path":"./syntaxes/xsl.tmLanguage.json"}]},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js atom/language-xml grammars/xml.cson ./syntaxes/xml.tmLanguage.json grammars/xsl.cson ./syntaxes/xsl.tmLanguage.json"},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.xml","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/xml","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/xml","scheme":"file"}},{"name":"yaml","displayName":"YAML Language Basics","description":"Provides syntax highlighting and bracket matching in YAML files.","version":"1.0.0","publisher":"vscode","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../../build/npm/update-grammar.js textmate/yaml.tmbundle Syntaxes/YAML.tmLanguage ./syntaxes/yaml.tmLanguage.json"},"contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":false}}},"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.yaml","extensionLocation":{"$mid":1,"fsPath":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/yaml","path":"/nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/yaml","scheme":"file"}},{"name":"Nix","description":"Nix language support for Visual Studio Code.","version":"1.0.1","publisher":"bbenoist","icon":"images/icon.png","galleryBanner":{"color":"#FFFFFF","theme":"light"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/bbenoist/vscode-nix/issues"},"homepage":"https://github.com/bbenoist/vscode-nix/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bbenoist/vscode-nix.git"},"engines":{"vscode":"^0.10.1"},"categories":["Languages"],"contributes":{"languages":[{"id":"nix","extensions":[".nix"],"configuration":"./nix.configuration.json"}],"grammars":[{"language":"nix","scopeName":"source.nix","path":"./syntaxes/nix.tmLanguage"}]},"uuid":"5b21bd54-5258-4a3e-887f-193d9bb5f063","isBuiltin":false,"isUnderDevelopment":false,"id":"bbenoist.Nix","extensionLocation":{"$mid":1,"fsPath":"/home/andrei/.vscode/extensions/bbenoist.nix-1.0.1","path":"/home/andrei/.vscode/extensions/bbenoist.nix-1.0.1","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.20.1","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.23.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["onLanguage:cpp","onLanguage:c","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.ConfigurationEdit","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.Navigate","onCommand:C_Cpp.GoToDeclaration","onCommand:C_Cpp.PeekDeclaration","onCommand:C_Cpp.ToggleErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ToggleSnippets","onCommand:C_Cpp.ShowReleaseNotes","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.PauseParsing","onCommand:C_Cpp.ResumeParsing","onCommand:C_Cpp.ShowParsingCommands","onCommand:C_Cpp.TakeSurvey","onDebug","workspaceContains:/.vscode/c_cpp_properties.json"],"main":"/home/andrei/.vscode/extensions/ms-vscode.cpptools-0.20.1/out/src/main","contributes":{"problemMatchers":[{"name":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use \"{key: value, ...}\" to set specific parameters, e.g.: \"{ BasedOnStyle: LLVM, IndentWidth: 8 }\"","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. Warnings about #includes that could not be located will always be reported to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"Description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.navigation.length":{"type":"number","default":60,"description":"Maximum character length of the scope/navigation UI in the status bar. The UI may not appear if this value is too large.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"resource"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"resource"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/Cpp"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/Cpp"},{"command":"C_Cpp.ConfigurationEdit","title":"Edit Configurations...","category":"C/Cpp"},{"command":"C_Cpp.GoToDeclaration","title":"Go to Declaration","category":"C/Cpp"},{"command":"C_Cpp.PeekDeclaration","title":"Peek Declaration","category":"C/Cpp"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/Cpp"},{"command":"C_Cpp.Navigate","title":"Navigate...","category":"C/Cpp"},{"command":"C_Cpp.ToggleSnippets","title":"Toggle Snippets","category":"C/Cpp"},{"command":"C_Cpp.ToggleErrorSquiggles","title":"Toggle Error Squiggles","category":"C/Cpp"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/Cpp"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/Cpp"},{"command":"C_Cpp.ShowReleaseNotes","title":"Show Release Notes","category":"C/Cpp"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/Cpp"},{"command":"C_Cpp.PauseParsing","title":"Pause Parsing","category":"C/Cpp"},{"command":"C_Cpp.ResumeParsing","title":"Resume Parsing","category":"C/Cpp"},{"command":"C_Cpp.ShowParsingCommands","title":"Show Parsing Commands","category":"C/Cpp"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/Cpp"}],"keybindings":[{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.GoToDeclaration","key":"Ctrl+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.PeekDeclaration","key":"Ctrl+Alt+F12","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.Navigate","key":"Alt+N","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["name","type","request","program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"cwd":{"type":"string","description":"The working directory of the target","default":".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Arguments for the mi debugger (such as gdb) to use. When unspecified.","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched. Note this option is ignored in some cases for technical reasons.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false},"attach":{"type":"object","default":{},"required":["name","type","request","program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"enum":["cppdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the mi debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false}}},{"type":"cppvsdbg","label":"C++ (Windows)","enableBreakpointsFor":{"languageIds":["c","cpp"]},"adapterExecutableCommand":"extension.cppvsdbgAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["name","type","request","program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":"string","value":"string"}},"default":[]},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["launch"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false},"attach":{"type":"object","default":{},"required":["name","type","request","processId"],"properties":{"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}],"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":"","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\".","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends.","pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"windows":{"type":"object","description":"Windows specific launch configuration attributes.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"osx":{"type":"object","description":"OS X specific launch configuration attributes.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."},"linux":{"type":"object","description":"Linux specific launch configuration attributes.","properties":{"type":{"enum":["cppvsdbg"],"description":"Type of configuration.","pattern":"^(?!node2)","errorMessage":"The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.","patternErrorMessage":"\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\"."},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcesss}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"name":{"type":"string","description":"Name of configuration; appears in the launch configuration drop down menu.","default":"Launch"},"request":{"enum":["attach"],"description":"Request type of configuration. Can be \"launch\" or \"attach\"."},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711},"preLaunchTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run before debug session starts."},"postDebugTask":{"anyOf":[{"oneOf":[]},{"type":["string","null"]}],"default":"","description":"Task to run after debug session ends."},"internalConsoleOptions":{"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart","description":"Controls when the internal debug console should open.","scope":2,"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"pattern":"^(?!.*\\$\\{(env|config|command)\\.)","patternErrorMessage":"'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."}},"additionalProperties":false}}}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"./c_cpp_properties.schema.json"}],"menus":{"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == cpp","command":"C_Cpp.GoToDeclaration","group":"navigation@2"},{"when":"editorLangId == c","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == cpp","command":"C_Cpp.PeekDeclaration","group":"navigation@3"},{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other@1"},{"when":"editorLangId == c","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == cpp","command":"C_Cpp.Navigate","group":"other@2"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other@4"}]},"configurationDefaults":{"[cpp]":{"editor.autoIndent":false},"[c]":{"editor.autoIndent":false}},"snippets":[{"language":"cpp","path":"./cpp_snippets.json"},{"language":"c","path":"./cpp_snippets.json"}]},"scripts":{"compile":"npm run vscode:prepublish","generateOptionsSchema":"gulp generateOptionsSchema","integrationTests":"gulp integrationTests","postinstall":"node ./node_modules/vscode/bin/install","pretest":"tsc -p ./","pr-check":"gulp pr-check","test":"gulp allTests","tslint":"gulp tslint","unitTests":"gulp unitTests","vscode:prepublish":"node ./src/Support/prepublish.js","watch":"tsc -watch -p ./"},"devDependencies":{"@types/mocha":"^2.2.43","@types/node":"^8.0.46","async-child-process":"^1.1.1","child-process":"^1.0.2","gulp":"^4.0.0","gulp-env":"0.4.0","gulp-mocha":"5.0.0","gulp-tslint":"8.1.2","mocha":"^4.0.1","tslint":"5.8.0","tslint-microsoft-contrib":"5.0.1","tslint-no-unused-expression-chai":"0.0.3","typescript":"^2.5.3","vrsource-tslint-rules":"^5.8.2","vscode":"^1.1.18"},"dependencies":{"http-proxy-agent":"~2.1.0","https-proxy-agent":"~2.2.0","jsonc-parser":"^1.0.0","minimatch":"~3.0.4","mkdirp":"~0.5.1","tmp":"~0.0.33","vscode-cpptools":"2.1.1","vscode-debugadapter":"~1.24.0","vscode-debugprotocol":"~1.24.0","vscode-extension-telemetry":"~0.0.22","vscode-languageclient":"3.5.1","yauzl":"~2.8.0"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2036673","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2036672","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.linux","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.linux"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2036674","platforms":["darwin"],"binaries":["./bin/Microsoft.VSCode.CPP.Extension.darwin","./bin/Microsoft.VSCode.CPP.IntelliSense.Msvc.darwin"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2036671","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=872607","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=872608","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=872609","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=872610","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB 3.8.0 (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=872985","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","extensionLocation":{"$mid":1,"fsPath":"/home/andrei/.vscode/extensions/ms-vscode.cpptools-0.20.1","path":"/home/andrei/.vscode/extensions/ms-vscode.cpptools-0.20.1","scheme":"file"}},{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"3.6.0","publisher":"PKief","engines":{"vscode":"^1.5.0"},"homepage":"https://github.com/PKief/vscode-material-icon-theme/blob/master/README.md","repository":{"type":"git","url":"https://github.com/PKief/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/PKief/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#263238","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"activationEvents":["*"],"main":"/home/andrei/.vscode/extensions/pkief.material-icon-theme-3.6.0/out/src/extension","contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./out/src/material-icons.json"}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration"},{"command":"material-icon-theme.hidesExplorerArrows","title":"Material Icons: Hide Folder Arrows"},{"command":"material-icon-theme.opacity","title":"Material Icons: Change Opacity"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.showWelcomeMessage":{"type":"boolean","default":true,"description":"Show the welcome message after first installation."},"material-icon-theme.showUpdateMessage":{"type":"boolean","default":false,"description":"Show the update message after each update."},"material-icon-theme.showReloadMessage":{"type":"boolean","default":true,"description":"Show restart notification."},"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."}}}},"scripts":{"vscode:prepublish":"npm run build","prebuild":"npm run lint && npm run clean","build":"npm run compile && npm run generateJson","postbuild":"npm run check","clean":"rimraf ./out","compile":"tsc -p ./","compile:watch":"tsc -watch -p ./","generateJson":"ts-node ./scripts/icons/generateJson.ts","check":"ts-node scripts/icons/checks","postinstall":"node ./node_modules/vscode/bin/install","lint":"tslint -c tslint.json ./src/**/*.ts ./scripts/**/*ts","pretest":"npm run build","test":"node ./node_modules/vscode/bin/test","preview":"npm run build && ts-node ./scripts/preview"},"dependencies":{"lodash.merge":"^4.6.1","opn":"^5.3.0","semver":"^5.5.1"},"devDependencies":{"@types/mocha":"^5.2.5","@types/node":"^10.9.4","@types/puppeteer":"^1.6.3","mocha":"^5.2.0","puppeteer":"^1.8.0","rimraf":"^2.6.2","ts-node":"^7.0.1","tslint":"^5.11.0","typescript":"^3.0.3","vscode":"^1.1.21"},"uuid":"5db78037-f674-459f-a236-db622c427c5b","isBuiltin":false,"isUnderDevelopment":false,"id":"PKief.material-icon-theme","extensionLocation":{"$mid":1,"fsPath":"/home/andrei/.vscode/extensions/pkief.material-icon-theme-3.6.0","path":"/home/andrei/.vscode/extensions/pkief.material-icon-theme-3.6.0","scheme":"file"}},{"name":"cmake","version":"0.0.17","publisher":"twxs","displayName":"CMake","description":"CMake langage support for Visual Studio Code","author":{"name":"Nicolas Martin"},"repository":{"type":"git","url":"https://github.com/twxs/vs.language.cmake.git"},"bugs":{"url":"https://github.com/twxs/vs.language.cmake/issues"},"homepage":"https://github.com/twxs/vs.language.cmake/blob/master/README.md","keywords":["CMake","Syntax"],"categories":["Languages","Snippets","Other"],"icon":"images/icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"license":"MIT","activationEvents":["onLanguage:cmake"],"engines":{"vscode":"^1.10.0"},"main":"/home/andrei/.vscode/extensions/twxs.cmake-0.0.17/out/extension","contributes":{"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"commands":[{"command":"cmake.onlineHelp","title":"CMake: Online Help"}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"configuration":{"title":"CMake configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"The path to CMake generator executable"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"opener":"^1.4.2"},"devDependencies":{"typescript":"^2.0.9","vscode":"^1.0.3","@types/node":"^6.0.47","mocha":"^3.1.2","@types/mocha":"^2.2.33"},"uuid":"2be7cf14-2603-402e-9771-fd79df83cdf8","isBuiltin":false,"isUnderDevelopment":false,"id":"twxs.cmake","extensionLocation":{"$mid":1,"fsPath":"/home/andrei/.vscode/extensions/twxs.cmake-0.0.17","path":"/home/andrei/.vscode/extensions/twxs.cmake-0.0.17","scheme":"file"}},{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.1.2","repository":{"type":"git","url":"https://github.com/vector-of-bool/vscode-cmake-tools"},"bugs":{"url":"https://github.com/vector-of-bool/vscode-cmake-tools/issues"},"homepage":"https://github.com/vector-of-bool/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native"],"publisher":"vector-of-bool","engines":{"vscode":"^1.25.0"},"categories":["Other"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/icon_128.png","activationEvents":["onCommand:cmake.build","onCommand:cmake.buildWithTarget","onCommand:cmake.clean","onCommand:cmake.cleanConfigure","onCommand:cmake.cleanRebuild","onCommand:cmake.configure","onCommand:cmake.ctest","onCommand:cmake.debugTarget","onCommand:cmake.editCache","onCommand:cmake.editKits","onCommand:cmake.viewLog","onCommand:cmake.install","onCommand:cmake.launchTarget","onCommand:cmake.launchTargetPath","onCommand:cmake.quickStart","onCommand:cmake.resetState","onCommand:cmake.scanForKits","onCommand:cmake.selectLaunchTarget","onCommand:cmake.setVariant","onCommand:cmake.stop","onCommand:cmake.outline.configure","onCommand:cmake.outline.build","workspaceContains:CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json"],"main":"/home/andrei/.vscode/extensions/vector-of-bool.cmake-tools-1.1.2/out/src/extension","contributes":{"commands":[{"command":"cmake.viewLog","title":"Open the CMake Tools log file","category":"CMake"},{"command":"cmake.editKits","title":"Edit user-local CMake kits","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","category":"CMake"},{"command":"cmake.setVariant","title":"Set the current build variant","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.outline.configure","title":"Configure","icon":{"dark":"res/configure-icon.svg","light":"res/configure-icon.svg"}},{"command":"cmake.build","title":"Build","category":"CMake"},{"command":"cmake.buildNamedTarget","title":"(Internal) Build a target by name"},{"command":"cmake.outline.build","title":"Build","icon":{"dark":"res/build-icon.svg","light":"res/build-icon.svg"}},{"command":"cmake.compileFile","title":"Compile File","category":"CMake","icon":{"dark":"res/build-icon.svg","light":"res/build-icon.svg"}},{"command":"cmake.outline.compileFile","title":"Compile This File","icon":{"dark":"res/build-icon.svg","light":"res/build-icon.svg"}},{"command":"cmake.install","title":"Install","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build a target","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set the default build target","category":"CMake"},{"command":"cmake.cleanConfigure","title":"Delete cached build settings and reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean reconfigure"},{"command":"cmake.clean","title":"Clean","category":"CMake"},{"command":"cmake.outline.clean","title":"Clean"},{"command":"cmake.cleanRebuild","title":"Clean rebuild","category":"CMake"},{"command":"cmake.outline.cleanRebuild","title":"Clean rebuild"},{"command":"cmake.ctest","title":"Run tests","category":"CMake"},{"command":"cmake.editCache","title":"Edit the CMake Cache","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug Target","category":"CMake"},{"command":"cmake.launchTarget","title":"Execute the current target without a debugger","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Select a Target to Debug","category":"CMake"},{"command":"cmake.stop","title":"Stop the currently running CMake/Build process","category":"CMake"},{"command":"cmake.outline.stop","title":"Stop current build","icon":{"dark":"res/stop-icon.svg","light":"res/stop-icon.svg"}},{"command":"cmake.resetState","title":"Reset CMake Tools extension state (For troubleshooting)","category":"CMake"},{"command":"cmake.outline.buildTarget","title":"Build","icon":{"dark":"res/build-icon.svg","light":"res/build-icon.svg"}},{"command":"cmake.outline.runUtilityTarget","title":"Run utility"},{"command":"cmake.outline.debugTarget","title":"Run with debugger"},{"command":"cmake.outline.launchTarget","title":"Run in terminal"},{"command":"cmake.outline.setDefaultTarget","title":"Set as default target"},{"command":"cmake.outline.setLaunchTarget","title":"Set as launch/debug target"},{"command":"cmake.outline.revealInCMakeLists","title":"Open CMakeLists.txt"}],"menus":{"commandPalette":[{"command":"cmake.configure"},{"command":"cmake.build"},{"command":"cmake.install"},{"command":"cmake.buildWithTarget"},{"command":"cmake.compileFile"},{"command":"cmake.setVariant"},{"command":"cmake.setDefaultTarget"},{"command":"cmake.setDefaultTarget"},{"command":"cmake.cleanConfigure"},{"command":"cmake.clean"},{"command":"cmake.cleanRebuild"},{"command":"cmake.ctest"},{"command":"cmake.editCache"},{"command":"cmake.debugTarget"},{"command":"cmake.launchTarget"},{"command":"cmake.selectLaunchTarget"},{"command":"cmake.stop"}],"view/title":[{"command":"cmake.outline.configure","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.build","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@2"},{"command":"cmake.outline.stop","when":"view == cmake.outline && cmake:isBuilding","group":"navigation@3"},{"command":"cmake.outline.clean","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigure","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuild","when":"view == cmake.outline","group":"1_cmakeOutline"}],"view/item/context":[{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && viewItem =~ /canBuild=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.compileFile","when":"view == cmake.outline && viewItem =~ /nodeType=file/","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp"},{"command":"cmake.compileFile","when":"resourceLangId == c"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp"},{"command":"cmake.compileFile","when":"resourceLangId == c"}]},"configuration":{"type":"object","title":"CMake Tools configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceRoot}/build","description":"The directory where CMake build files will go","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"type":"string","default":"${workspaceRoot}","description":"The directory of the root CMakeLists.txt file","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"description":"CMake variables to set on the command line","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to an cache-initializing CMake file"},{"type":"array","description":"List of cache initializer files","items":{"type":"string","description":"A cache initializing CMake file"}}],"scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":["Ninja","Unix Makefiles"],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing)","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inference from cmake.cmakePath (recommended to leave null)","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"description":"The number of parallel test jobs. Use zero to use the value of cmake.parallelJobs","scope":"resource"},"cmake.autoRestartBuild":{"type":"boolean","default":false,"description":"If 'true', requesting a build while a build is already running will stop and restart the build","scope":"resource"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","description":"Output parsers to use. Supported parsers 'cmake', 'gcc', 'gnuld' for GNULD-style inker output, 'msvc' for Microsoft Visual C++, and 'ghs' for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs"]},"default":["cmake","gcc","gnuld","msvc","ghs"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths"},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files"},"externalConsole":{"type":"boolean","description":"Launch an external console for the program"},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging"},"args":{"type":"array","description":"Arguments to pass to program command line","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program"},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable"},"value":{"type":"string","description":"Value for the environment variable"}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger"},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run"},"description":{"type":"string","description":"Description of the command"},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run"},"description":{"type":"string","description":"Description of the command"},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"schemas/variants-schema.json","default":{"buildType":{"default":"debug","description":"The build type","choices":{"debug":{"short":"Debug","long":"Emit debug information without performing optimizations","buildType":"Debug"},"release":{"short":"Release","long":"Enable optimizations, omit debug info","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Perform optimizations AND include debugging information","buildType":"RelWithDebInfo"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Arguments to pass to CTest","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands","additionalProperties":{"type":"string","description":"Value for the environment variable"},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure","additionalProperties":{"type":"string","description":"Value for the environment variable"},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build","additionalProperties":{"type":"string","description":"Value for the environment variable"},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest","additionalProperties":{"type":"string","description":"Value for the environment variable"},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory"},"default":["C:\\MinGW"],"description":"Directories where MinGW may be installed","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory"},"default":[],"description":"Directories where Emscripten may be installed","scope":"window"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":null,"description":"Automatically configure CMake project directories when they are opened","scope":"resource"},"cmake.useCMakeServer":{"type":"boolean","default":true,"description":"Enable CMake server","scope":"resource"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy)","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"}}},"keybindings":[{"key":"f7","command":"cmake.build"},{"key":"shift+f7","command":"cmake.buildWithTarget"},{"key":"ctrl+f5","command":"cmake.debugTarget","when":"!inDebugMode"},{"key":"shift+f5","command":"cmake.launchTarget"}],"viewsContainers":{"activitybar":[{"id":"cmake__viewContainer","title":"CMake","icon":"res/cmake-view-icon.svg","when":"cmakeToolsActive"}]},"views":{"cmake__viewContainer":[{"id":"cmake.folders","name":"Folders","when":"cmakeToolsMultiRootActive"},{"id":"cmake.outline","name":"Project Outline","when":"cmakeToolsActive"}]},"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"./schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"./schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"./schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"./schemas/kits-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"vscode:prepublish":"./node_modules/.bin/tsc -p ./","compile":"./node_modules/.bin/tsc -watch -p ./","compile-once":"./node_modules/.bin/tsc -p ./","postinstall":"node ./node_modules/vscode/bin/install","lint":"node ./node_modules/tslint/bin/tslint -p . --fix","lint:nofix":"node ./node_modules/tslint/bin/tslint -p .","docs":"node ./node_modules/typedoc/bin/typedoc --mode modules --excludeExternals --out build/docs/dev --readme none src/"},"devDependencies":{"@types/ajv":"^0.0.3","@types/chai":"^4.0.4","@types/chai-as-promised":"^7.1.0","@types/es6-promisify":"~5.0.0","@types/js-yaml":"^3.5.28","@types/json5":"~0.0.29","@types/mocha":"~2.2.41","@types/node":"~8.0.0","@types/rimraf":"^0.0.28","@types/sinon":"~4.3.3","@types/which":"~1.3.1","@types/ws":"^0.0.38","@types/xml2js":"^0.0.28","chai":"^4.1.2","chai-as-promised":"^7.1.1","clang-format":"^1.2.2","mocha":"~3.4.2","sinon":"~5.0.7","ts-node":"^6.0.0","tslint":"^5.9.1","typedoc":"~0.11.1","typescript":"~2.8.3","vscode":"1.1.18"},"dependencies":{"Polymer":"1.6.1--","ajv":"^4.7.5","es6-promisify":"~5.0.0","js-yaml":"^3.6.1","json5":"^0.5.1","module-alias":"^2.0.6","open":"0.0.5","rimraf":"^2.5.4","rollbar":"~2.2.8","vscode-cpptools":"^1.3.1","which":"~1.3.0","ws":"^1.1.1","xml2js":"^0.4.17"},"uuid":"7c889349-8749-43d4-8b5e-08939936d7f4","isBuiltin":false,"isUnderDevelopment":false,"id":"vector-of-bool.cmake-tools","extensionLocation":{"$mid":1,"fsPath":"/home/andrei/.vscode/extensions/vector-of-bool.cmake-tools-1.1.2","path":"/home/andrei/.vscode/extensions/vector-of-bool.cmake-tools-1.1.2","scheme":"file"}}],"configuration":{"defaults":{"contents":{"editor":{"fontFamily":"'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'","fontWeight":"normal","fontSize":14,"lineHeight":0,"letterSpacing":0,"lineNumbers":"on","rulers":[],"wordSeparators":"`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?","tabSize":4,"insertSpaces":true,"detectIndentation":true,"roundedSelection":true,"scrollBeyondLastLine":true,"scrollBeyondLastColumn":5,"smoothScrolling":false,"minimap":{"enabled":true,"side":"right","showSlider":"mouseover","renderCharacters":true,"maxColumn":120},"hover":{"enabled":true,"delay":300,"sticky":true},"find":{"seedSearchStringFromSelection":true,"autoFindInSelection":false},"wordWrap":"off","wordWrapColumn":80,"wrappingIndent":"same","mouseWheelScrollSensitivity":1,"multiCursorModifier":"alt","multiCursorMergeOverlapping":true,"quickSuggestions":{"other":true,"comments":false,"strings":false},"quickSuggestionsDelay":10,"parameterHints":{"enabled":true,"cycle":false},"autoClosingBrackets":"languageDefined","autoClosingQuotes":"languageDefined","autoSurround":"languageDefined","formatOnType":false,"formatOnPaste":false,"autoIndent":true,"suggestOnTriggerCharacters":true,"acceptSuggestionOnEnter":"on","acceptSuggestionOnCommitCharacter":true,"snippetSuggestions":"inline","emptySelectionClipboard":true,"copyWithSyntaxHighlighting":true,"wordBasedSuggestions":true,"suggestSelection":"recentlyUsed","suggestFontSize":0,"suggestLineHeight":0,"tabCompletion":"off","suggest":{"filterGraceful":true,"localityBonus":false,"snippetsPreventQuickSuggestions":true},"selectionHighlight":true,"occurrencesHighlight":true,"overviewRulerLanes":3,"overviewRulerBorder":true,"cursorBlinking":"blink","mouseWheelZoom":false,"cursorStyle":"line","cursorWidth":0,"fontLigatures":false,"hideCursorInOverviewRuler":false,"renderWhitespace":"none","renderControlCharacters":false,"renderIndentGuides":true,"highlightActiveIndentGuide":true,"renderLineHighlight":"line","codeLens":true,"folding":true,"foldingStrategy":"auto","showFoldingControls":"mouseover","matchBrackets":true,"glyphMargin":true,"useTabStops":true,"trimAutoWhitespace":true,"stablePeek":false,"dragAndDrop":true,"accessibilitySupport":"auto","showUnused":true,"links":true,"colorDecorators":true,"lightbulb":{"enabled":true},"codeActionsOnSave":{},"codeActionsOnSaveTimeout":750,"selectionClipboard":true,"largeFileOptimizations":true,"tokenColorCustomizations":{},"formatOnSave":false,"formatOnSaveTimeout":750},"diffEditor":{"renderSideBySide":true,"ignoreTrimWhitespace":true,"renderIndicators":true},"http":{"proxy":"","proxyStrictSSL":true,"proxyAuthorization":null,"systemProxy":"off"},"telemetry":{"enableTelemetry":true,"enableCrashReporter":true},"update":{"channel":"default","enableWindowsBackgroundUpdates":true,"showReleaseNotes":true},"workbench":{"list":{"multiSelectModifier":"ctrlCmd","openMode":"singleClick"},"tree":{"horizontalScrolling":false},"statusBar":{"feedback":{"visible":true},"visible":true},"colorTheme":"Default Dark+","iconTheme":"vs-seti","colorCustomizations":{},"editor":{"showTabs":true,"highlightModifiedTabs":false,"labelFormat":"default","tabCloseButton":"right","tabSizing":"fit","showIcons":true,"enablePreview":true,"enablePreviewFromQuickOpen":true,"closeOnFileDelete":false,"openPositioning":"right","openSideBySideDirection":"right","closeEmptyGroups":true,"revealIfOpen":false,"restoreViewState":true,"centeredLayoutAutoResize":true},"commandPalette":{"history":50,"preserveInput":false},"quickOpen":{"closeOnFocusLost":true,"preserveInput":false},"settings":{"openDefaultSettings":true,"openDefaultKeybindings":true,"enableNaturalLanguageSearch":true,"settingsSearchTocBehavior":"filter","editor":"ui"},"sideBar":{"location":"left"},"panel":{"defaultLocation":"bottom"},"activityBar":{"visible":true},"view":{"alwaysShowHeaderActions":false},"enableExperiments":true,"enableLegacyStorage":true,"tips":{"enabled":true},"startupEditor":"welcomePage"},"breadcrumbs":{"enabled":false,"filePath":"on","symbolPath":"on","symbolSortOrder":"position"},"problems":{"decorations":{"enabled":true},"autoReveal":true},"scm":{"alwaysShowProviders":false,"diffDecorations":"all","diffDecorationsGutterWidth":3,"alwaysShowActions":false},"outline":{"icons":true,"problems":{"enabled":true,"colors":true,"badges":true}},"files":{"exclude":{"**/.git":true,"**/.svn":true,"**/.hg":true,"**/CVS":true,"**/.DS_Store":true},"associations":{},"encoding":"utf8","autoGuessEncoding":false,"eol":"auto","enableTrash":true,"trimTrailingWhitespace":false,"insertFinalNewline":false,"trimFinalNewlines":false,"autoSave":"off","autoSaveDelay":1000,"watcherExclude":{"**/.git/objects/**":true,"**/.git/subtree-cache/**":true,"**/node_modules/**":true},"hotExit":"onExit","useExperimentalFileWatcher":false,"defaultLanguage":"","maxMemoryForLargeFilesMB":4096},"explorer":{"openEditors":{"visible":9},"autoReveal":true,"enableDragAndDrop":true,"confirmDragAndDrop":true,"confirmDelete":true,"sortOrder":"default","decorations":{"colors":true,"badges":true}},"search":{"exclude":{"**/node_modules":true,"**/bower_components":true},"useRipgrep":true,"useLegacySearch":false,"useIgnoreFiles":true,"useGlobalIgnoreFiles":false,"quickOpen":{"includeSymbols":false,"includeHistory":true},"followSymlinks":true,"smartCase":false,"location":"sidebar","collapseResults":"auto","useReplacePreview":true,"showLineNumbers":false,"runInExtensionHost":false,"usePCRE2":false},"searchRipgrep":{"enable":false},"window":{"openFilesInNewWindow":"off","openFoldersInNewWindow":"default","openWithoutArgumentsInNewWindow":"on","restoreWindows":"one","restoreFullscreen":false,"zoomLevel":0,"title":"${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}","newWindowDimensions":"default","closeWhenEmpty":false,"menuBarVisibility":"default","enableMenuBarMnemonics":true,"titleBarStyle":"native"},"zenMode":{"fullScreen":true,"centerLayout":true,"hideTabs":true,"hideStatusBar":true,"hideActivityBar":true,"restore":false},"debug":{"allowBreakpointsEverywhere":false,"openExplorerOnEnd":false,"inlineValues":false,"toolBarLocation":"floating","showInStatusBar":"onFirstSessionStart","internalConsoleOptions":"openOnFirstSessionStart","openDebug":"openOnSessionStart","enableAllHovers":false,"node":{"autoAttach":"disabled"}},"launch":{"configurations":[],"compounds":[]},"terminal":{"integrated":{"shell":{"linux":"sh","osx":"/bin/bash","windows":"cmd.exe"},"shellArgs":{"linux":[],"osx":["-l"],"windows":[]},"macOptionIsMeta":false,"macOptionClickForcesSelection":false,"copyOnSelection":false,"drawBoldTextInBrightColors":true,"fontFamily":"","fontSize":14,"letterSpacing":0,"lineHeight":1,"fontWeight":"normal","fontWeightBold":"bold","cursorBlinking":false,"cursorStyle":"block","scrollback":1000,"setLocaleVariables":false,"rendererType":"auto","rightClickBehavior":"default","cwd":"","confirmOnExit":false,"enableBell":false,"commandsToSkipShell":["editor.action.toggleTabFocusMode","workbench.action.debug.continue","workbench.action.debug.pause","workbench.action.debug.restart","workbench.action.debug.run","workbench.action.debug.start","workbench.action.debug.stepInto","workbench.action.debug.stepOut","workbench.action.debug.stepOver","workbench.action.debug.stop","workbench.action.firstEditorInGroup","workbench.action.focusActiveEditorGroup","workbench.action.focusEighthEditorGroup","workbench.action.focusFifthEditorGroup","workbench.action.focusFirstEditorGroup","workbench.action.focusFourthEditorGroup","workbench.action.focusLastEditorGroup","workbench.action.focusSecondEditorGroup","workbench.action.focusSeventhEditorGroup","workbench.action.focusSixthEditorGroup","workbench.action.focusThirdEditorGroup","workbench.action.lastEditorInGroup","workbench.action.navigateDown","workbench.action.navigateLeft","workbench.action.navigateRight","workbench.action.navigateUp","workbench.action.openNextRecentlyUsedEditorInGroup","workbench.action.openPreviousRecentlyUsedEditorInGroup","workbench.action.quickOpen","workbench.action.quickOpenPreviousEditor","workbench.action.quickOpenView","workbench.action.showCommands","workbench.action.tasks.build","workbench.action.tasks.restartTask","workbench.action.tasks.runTask","workbench.action.tasks.showLog","workbench.action.tasks.showTasks","workbench.action.tasks.terminate","workbench.action.tasks.test","workbench.action.terminal.clear","workbench.action.terminal.clearSelection","workbench.action.terminal.copySelection","workbench.action.terminal.deleteToLineStart","workbench.action.terminal.deleteWordLeft","workbench.action.terminal.deleteWordRight","workbench.action.terminal.findNextTerminalFocus","workbench.action.terminal.findPreviousTerminalFocus","workbench.action.terminal.focus","workbench.action.terminal.focusAtIndex1","workbench.action.terminal.focusAtIndex2","workbench.action.terminal.focusAtIndex3","workbench.action.terminal.focusAtIndex4","workbench.action.terminal.focusAtIndex5","workbench.action.terminal.focusAtIndex6","workbench.action.terminal.focusAtIndex7","workbench.action.terminal.focusAtIndex8","workbench.action.terminal.focusAtIndex9","workbench.action.terminal.focusFindWidget","workbench.action.terminal.focusNext","workbench.action.terminal.focusNextPane","workbench.action.terminal.focusPrevious","workbench.action.terminal.focusPreviousPane","workbench.action.terminal.hideFindWidget","workbench.action.terminal.kill","workbench.action.terminal.moveToLineEnd","workbench.action.terminal.moveToLineStart","workbench.action.terminal.new","workbench.action.terminal.newInActiveWorkspace","workbench.action.terminal.paste","workbench.action.terminal.resizePaneDown","workbench.action.terminal.resizePaneLeft","workbench.action.terminal.resizePaneRight","workbench.action.terminal.resizePaneUp","workbench.action.terminal.runActiveFile","workbench.action.terminal.runSelectedText","workbench.action.terminal.scrollDown","workbench.action.terminal.scrollDownPage","workbench.action.terminal.scrollToBottom","workbench.action.terminal.scrollToNextCommand","workbench.action.terminal.scrollToPreviousCommand","workbench.action.terminal.scrollToTop","workbench.action.terminal.scrollUp","workbench.action.terminal.scrollUpPage","workbench.action.terminal.selectAll","workbench.action.terminal.selectToNextCommand","workbench.action.terminal.selectToNextLine","workbench.action.terminal.selectToPreviousCommand","workbench.action.terminal.selectToPreviousLine","workbench.action.terminal.sendSequence","workbench.action.terminal.split","workbench.action.terminal.splitInActiveWorkspace","workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus","workbench.action.terminal.toggleFindRegexTerminalFocus","workbench.action.terminal.toggleFindWholeWordTerminalFocus","workbench.action.terminal.toggleTerminal","workbench.action.toggleFullScreen","workbench.action.toggleMaximizedPanel","workbench.action.togglePanel"],"env":{"osx":{},"linux":{},"windows":{}},"showExitAlert":true,"experimentalBufferImpl":"JsArray","splitCwd":"inherited"},"explorerKind":"integrated","external":{"windowsExec":"C:\\Windows\\System32\\cmd.exe","osxExec":"Terminal.app","linuxExec":"x-terminal-emulator"}},"keyboard":{"dispatch":"code"},"extensions":{"autoUpdate":true,"autoCheckUpdates":true,"ignoreRecommendations":false,"showRecommendationsOnlyOnDemand":false,"closeExtensionDetailsOnViewChange":false},"css":{"validate":true,"colorDecorators":{"enable":true},"lint":{"compatibleVendorPrefixes":"ignore","vendorPrefix":"warning","duplicateProperties":"ignore","emptyRules":"warning","importStatement":"ignore","boxModel":"ignore","universalSelector":"ignore","zeroUnits":"ignore","fontFaceProperties":"warning","hexColorLength":"error","argumentsInColorFunction":"error","unknownProperties":"warning","validProperties":[],"ieHack":"ignore","unknownVendorSpecificProperties":"ignore","propertyIgnoredDueToDisplay":"warning","important":"ignore","float":"ignore","idSelector":"ignore","unknownAtRules":"warning"},"trace":{"server":"off"}},"scss":{"validate":true,"colorDecorators":{"enable":true},"lint":{"compatibleVendorPrefixes":"ignore","vendorPrefix":"warning","duplicateProperties":"ignore","emptyRules":"warning","importStatement":"ignore","boxModel":"ignore","universalSelector":"ignore","zeroUnits":"ignore","fontFaceProperties":"warning","hexColorLength":"error","argumentsInColorFunction":"error","unknownProperties":"warning","validProperties":[],"ieHack":"ignore","unknownVendorSpecificProperties":"ignore","propertyIgnoredDueToDisplay":"warning","important":"ignore","float":"ignore","idSelector":"ignore"}},"less":{"validate":true,"colorDecorators":{"enable":true},"lint":{"compatibleVendorPrefixes":"ignore","vendorPrefix":"warning","duplicateProperties":"ignore","emptyRules":"warning","importStatement":"ignore","boxModel":"ignore","universalSelector":"ignore","zeroUnits":"ignore","fontFaceProperties":"warning","hexColorLength":"error","argumentsInColorFunction":"error","unknownProperties":"warning","validProperties":[],"ieHack":"ignore","unknownVendorSpecificProperties":"ignore","propertyIgnoredDueToDisplay":"warning","important":"ignore","float":"ignore","idSelector":"ignore"}},"emmet":{"showExpandedAbbreviation":"always","showAbbreviationSuggestions":true,"includeLanguages":{},"variables":{},"syntaxProfiles":{},"excludeLanguages":["markdown"],"extensionsPath":null,"triggerExpansionOnTab":false,"preferences":{},"showSuggestionsAsSnippets":false,"optimizeStylesheetParsing":true},"git":{"enabled":true,"path":null,"autoRepositoryDetection":true,"autorefresh":true,"autofetch":false,"branchValidationRegex":"","branchWhitespaceChar":"-","confirmSync":true,"countBadge":"all","checkoutType":"all","ignoreLegacyWarning":false,"ignoreMissingGitWarning":false,"ignoreLimitWarning":false,"defaultCloneDirectory":null,"enableSmartCommit":false,"enableCommitSigning":false,"confirmEmptyCommits":true,"decorations":{"enabled":true},"promptToSaveFilesBeforeCommit":false,"showInlineOpenFileAction":true,"showPushSuccessNotification":false,"inputValidation":"warn","inputValidationLength":72,"detectSubmodules":true,"detectSubmodulesLimit":10,"alwaysShowStagedChangesResourceGroup":false,"alwaysSignOff":false,"ignoredRepositories":[],"scanRepositories":[],"showProgress":true,"rebaseWhenSync":false,"fetchOnPull":false,"allowForcePush":false,"useForcePushWithLease":true,"confirmForcePush":true},"grunt":{"autoDetect":"on"},"gulp":{"autoDetect":"on"},"html":{"format":{"enable":true,"wrapLineLength":120,"unformatted":"wbr","contentUnformatted":"pre,code,textarea","indentInnerHtml":false,"preserveNewLines":true,"maxPreserveNewLines":null,"indentHandlebars":false,"endWithNewline":false,"extraLiners":"head, body, /html","wrapAttributes":"auto"},"suggest":{"angular1":false,"ionic":false,"html5":true},"validate":{"scripts":true,"styles":true},"autoClosingTags":true,"trace":{"server":"off"}},"jake":{"autoDetect":"on"},"json":{"schemas":[],"format":{"enable":true},"trace":{"server":"off"},"colorDecorators":{"enable":true}},"markdown":{"styles":[],"previewFrontMatter":"hide","preview":{"breaks":false,"linkify":true,"fontFamily":"-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif","fontSize":14,"lineHeight":1.6,"scrollPreviewWithEditor":true,"scrollPreviewWithEditorSelection":true,"markEditorSelection":true,"scrollEditorWithPreview":true,"doubleClickToSwitchToEditor":true,"openMarkdownLinks":"inPreview"},"trace":"off"},"merge-conflict":{"codeLens":{"enabled":true},"decorators":{"enabled":true},"autoNavigateNextConflict":{"enabled":false}},"npm":{"autoDetect":"on","runSilent":false,"packageManager":"npm","exclude":"","enableScriptExplorer":false,"scriptExplorerAction":"open","fetchOnlinePackageInfo":true},"php":{"suggest":{"basic":true},"validate":{"enable":true,"executablePath":null,"run":"onSave"}},"typescript":{"tsdk":null,"disableAutomaticTypeAcquisition":false,"npm":null,"check":{"npmIsInstalled":true},"referencesCodeLens":{"enabled":false},"implementationsCodeLens":{"enabled":false},"tsserver":{"log":"off","pluginPaths":[],"trace":"off"},"suggest":{"completeFunctionCalls":false,"paths":true,"autoImports":true,"enabled":true},"reportStyleChecksAsWarnings":true,"validate":{"enable":true},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"insertSpaceAfterTypeAssertion":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false},"tsc":{"autoDetect":"on"},"locale":null,"suggestionActions":{"enabled":true},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"auto"},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true,"surveys":{"enabled":true}},"javascript":{"referencesCodeLens":{"enabled":false},"suggest":{"completeFunctionCalls":false,"names":true,"paths":true,"autoImports":true,"enabled":true},"validate":{"enable":true},"format":{"enable":true,"insertSpaceAfterCommaDelimiter":true,"insertSpaceAfterConstructor":false,"insertSpaceAfterSemicolonInForStatements":true,"insertSpaceBeforeAndAfterBinaryOperators":true,"insertSpaceAfterKeywordsInControlFlowStatements":true,"insertSpaceAfterFunctionKeywordForAnonymousFunctions":true,"insertSpaceBeforeFunctionParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":false,"insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":true,"insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":false,"insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":false,"placeOpenBraceOnNewLineForFunctions":false,"placeOpenBraceOnNewLineForControlBlocks":false},"implicitProjectConfig":{"checkJs":false,"experimentalDecorators":false},"suggestionActions":{"enabled":true},"preferences":{"quoteStyle":"auto","importModuleSpecifier":"auto"},"updateImportsOnFileMove":{"enabled":"prompt"},"autoClosingTags":true},"jsDocCompletion":{"enabled":true},"C_Cpp":{"clang_format_path":null,"clang_format_style":"file","clang_format_fallbackStyle":"Visual Studio","clang_format_sortIncludes":null,"intelliSenseEngine":"Default","intelliSenseEngineFallback":"Enabled","autocomplete":"Default","errorSquiggles":"Enabled","dimInactiveRegions":true,"inactiveRegionOpacity":0.55,"inactiveRegionForegroundColor":null,"inactiveRegionBackgroundColor":null,"formatting":"Default","navigation":{"length":60},"loggingLevel":"Error","autoAddFileAssociations":true,"workspaceParsingPriority":"highest","workspaceSymbols":"Just My Code","exclusionPolicy":"checkFolders","preferredPathSeparator":"Forward Slash","commentContinuationPatterns":["/**"],"configurationWarnings":"Enabled","default":{"includePath":null,"defines":null,"macFrameworkPath":null,"windowsSdkVersion":null,"compileCommands":null,"forcedInclude":null,"intelliSenseMode":null,"compilerPath":null,"cStandard":null,"cppStandard":null,"configurationProvider":null,"browse":{"path":null,"databaseFilename":null,"limitSymbolsToIncludedHeaders":true},"systemIncludePath":null},"updateChannel":"Default"},"material-icon-theme":{"showWelcomeMessage":true,"showUpdateMessage":false,"showReloadMessage":true,"activeIconPack":"angular","files":{"associations":{}},"folders":{"associations":{},"theme":"specific","color":"#90a4ae"},"languages":{"associations":{}},"opacity":1,"hidesExplorerArrows":false},"cmake":{"cmakePath":"cmake","buildDirectory":"${workspaceRoot}/build","installPrefix":null,"sourceDirectory":"${workspaceRoot}","saveBeforeBuild":true,"buildBeforeRun":true,"clearOutputBeforeBuild":true,"configureSettings":{},"cacheInit":null,"preferredGenerators":["Ninja","Unix Makefiles"],"generator":null,"toolset":null,"platform":null,"configureArgs":[],"buildArgs":[],"buildToolArgs":[],"parallelJobs":0,"ctestPath":null,"ctest":{"parallelJobs":0},"autoRestartBuild":false,"parseBuildDiagnostics":true,"enabledOutputParsers":["cmake","gcc","gnuld","msvc","ghs"],"debugConfig":{},"defaultVariants":{"buildType":{"default":"debug","description":"The build type","choices":{"debug":{"short":"Debug","long":"Emit debug information without performing optimizations","buildType":"Debug"},"release":{"short":"Release","long":"Enable optimizations, omit debug info","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Perform optimizations AND include debugging information","buildType":"RelWithDebInfo"}}}},"ctestArgs":[],"environment":{},"configureEnvironment":{},"buildEnvironment":{},"testEnvironment":{},"mingwSearchDirs":["C:\\MinGW"],"emscriptenSearchDirs":[],"copyCompileCommands":null,"configureOnOpen":null,"useCMakeServer":true,"enableTraceLogging":false,"loggingLevel":"info"},"[git-commit]":{"editor.rulers":[72]},"[go]":{"editor.insertSpaces":false},"[json]":{"editor.quickSuggestions":{"strings":true}},"[makefile]":{"editor.insertSpaces":false},"[markdown]":{"editor.wordWrap":"on","editor.quickSuggestions":false},"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":false},"[cpp]":{"editor.autoIndent":false},"[c]":{"editor.autoIndent":false}},"overrides":[{"identifiers":["git-commit"],"contents":{"editor":{"rulers":[72]}}},{"identifiers":["go"],"contents":{"editor":{"insertSpaces":false}}},{"identifiers":["json"],"contents":{"editor":{"quickSuggestions":{"strings":true}}}},{"identifiers":["makefile"],"contents":{"editor":{"insertSpaces":false}}},{"identifiers":["markdown"],"contents":{"editor":{"wordWrap":"on","quickSuggestions":false}}},{"identifiers":["yaml"],"contents":{"editor":{"insertSpaces":true,"tabSize":2,"autoIndent":false}}},{"identifiers":["cpp"],"contents":{"editor":{"autoIndent":false}}},{"identifiers":["c"],"contents":{"editor":{"autoIndent":false}}}],"keys":["editor.fontFamily","editor.fontWeight","editor.fontSize","editor.lineHeight","editor.letterSpacing","editor.lineNumbers","editor.rulers","editor.wordSeparators","editor.tabSize","editor.insertSpaces","editor.detectIndentation","editor.roundedSelection","editor.scrollBeyondLastLine","editor.scrollBeyondLastColumn","editor.smoothScrolling","editor.minimap.enabled","editor.minimap.side","editor.minimap.showSlider","editor.minimap.renderCharacters","editor.minimap.maxColumn","editor.hover.enabled","editor.hover.delay","editor.hover.sticky","editor.find.seedSearchStringFromSelection","editor.find.autoFindInSelection","editor.wordWrap","editor.wordWrapColumn","editor.wrappingIndent","editor.mouseWheelScrollSensitivity","editor.multiCursorModifier","editor.multiCursorMergeOverlapping","editor.quickSuggestions","editor.quickSuggestionsDelay","editor.parameterHints.enabled","editor.parameterHints.cycle","editor.autoClosingBrackets","editor.autoClosingQuotes","editor.autoSurround","editor.formatOnType","editor.formatOnPaste","editor.autoIndent","editor.suggestOnTriggerCharacters","editor.acceptSuggestionOnEnter","editor.acceptSuggestionOnCommitCharacter","editor.snippetSuggestions","editor.emptySelectionClipboard","editor.copyWithSyntaxHighlighting","editor.wordBasedSuggestions","editor.suggestSelection","editor.suggestFontSize","editor.suggestLineHeight","editor.tabCompletion","editor.suggest.filterGraceful","editor.suggest.localityBonus","editor.suggest.snippetsPreventQuickSuggestions","editor.selectionHighlight","editor.occurrencesHighlight","editor.overviewRulerLanes","editor.overviewRulerBorder","editor.cursorBlinking","editor.mouseWheelZoom","editor.cursorStyle","editor.cursorWidth","editor.fontLigatures","editor.hideCursorInOverviewRuler","editor.renderWhitespace","editor.renderControlCharacters","editor.renderIndentGuides","editor.highlightActiveIndentGuide","editor.renderLineHighlight","editor.codeLens","editor.folding","editor.foldingStrategy","editor.showFoldingControls","editor.matchBrackets","editor.glyphMargin","editor.useTabStops","editor.trimAutoWhitespace","editor.stablePeek","editor.dragAndDrop","editor.accessibilitySupport","editor.showUnused","editor.links","editor.colorDecorators","editor.lightbulb.enabled","editor.codeActionsOnSave","editor.codeActionsOnSaveTimeout","editor.selectionClipboard","diffEditor.renderSideBySide","diffEditor.ignoreTrimWhitespace","editor.largeFileOptimizations","diffEditor.renderIndicators","http.proxy","http.proxyStrictSSL","http.proxyAuthorization","http.systemProxy","telemetry.enableTelemetry","update.channel","update.enableWindowsBackgroundUpdates","update.showReleaseNotes","workbench.list.multiSelectModifier","workbench.list.openMode","workbench.tree.horizontalScrolling","breadcrumbs.enabled","breadcrumbs.filePath","breadcrumbs.symbolPath","breadcrumbs.symbolSortOrder","problems.decorations.enabled","scm.alwaysShowProviders","scm.diffDecorations","scm.diffDecorationsGutterWidth","scm.alwaysShowActions","workbench.statusBar.feedback.visible","workbench.colorTheme","workbench.iconTheme","workbench.colorCustomizations","editor.tokenColorCustomizations","outline.icons","outline.problems.enabled","outline.problems.colors","outline.problems.badges","files.exclude","files.associations","files.encoding","files.autoGuessEncoding","files.eol","files.enableTrash","files.trimTrailingWhitespace","files.insertFinalNewline","files.trimFinalNewlines","files.autoSave","files.autoSaveDelay","files.watcherExclude","files.hotExit","files.useExperimentalFileWatcher","files.defaultLanguage","files.maxMemoryForLargeFilesMB","editor.formatOnSave","editor.formatOnSaveTimeout","explorer.openEditors.visible","explorer.autoReveal","explorer.enableDragAndDrop","explorer.confirmDragAndDrop","explorer.confirmDelete","explorer.sortOrder","explorer.decorations.colors","explorer.decorations.badges","search.exclude","search.useRipgrep","search.useLegacySearch","search.useIgnoreFiles","search.useGlobalIgnoreFiles","search.quickOpen.includeSymbols","search.quickOpen.includeHistory","search.followSymlinks","search.smartCase","search.location","search.collapseResults","search.useReplacePreview","search.showLineNumbers","searchRipgrep.enable","search.runInExtensionHost","search.usePCRE2","telemetry.enableCrashReporter","problems.autoReveal","workbench.editor.showTabs","workbench.editor.highlightModifiedTabs","workbench.editor.labelFormat","workbench.editor.tabCloseButton","workbench.editor.tabSizing","workbench.editor.showIcons","workbench.editor.enablePreview","workbench.editor.enablePreviewFromQuickOpen","workbench.editor.closeOnFileDelete","workbench.editor.openPositioning","workbench.editor.openSideBySideDirection","workbench.editor.closeEmptyGroups","workbench.editor.revealIfOpen","workbench.editor.restoreViewState","workbench.editor.centeredLayoutAutoResize","workbench.commandPalette.history","workbench.commandPalette.preserveInput","workbench.quickOpen.closeOnFocusLost","workbench.quickOpen.preserveInput","workbench.settings.openDefaultSettings","workbench.settings.openDefaultKeybindings","workbench.sideBar.location","workbench.panel.defaultLocation","workbench.statusBar.visible","workbench.activityBar.visible","workbench.view.alwaysShowHeaderActions","workbench.settings.enableNaturalLanguageSearch","workbench.settings.settingsSearchTocBehavior","workbench.settings.editor","workbench.enableExperiments","workbench.enableLegacyStorage","window.openFilesInNewWindow","window.openFoldersInNewWindow","window.openWithoutArgumentsInNewWindow","window.restoreWindows","window.restoreFullscreen","window.zoomLevel","window.title","window.newWindowDimensions","window.closeWhenEmpty","window.menuBarVisibility","window.enableMenuBarMnemonics","window.titleBarStyle","zenMode.fullScreen","zenMode.centerLayout","zenMode.hideTabs","zenMode.hideStatusBar","zenMode.hideActivityBar","zenMode.restore","workbench.tips.enabled","debug.allowBreakpointsEverywhere","debug.openExplorerOnEnd","debug.inlineValues","debug.toolBarLocation","debug.showInStatusBar","debug.internalConsoleOptions","debug.openDebug","debug.enableAllHovers","launch","workbench.startupEditor","terminal.integrated.shell.linux","terminal.integrated.shellArgs.linux","terminal.integrated.shell.osx","terminal.integrated.shellArgs.osx","terminal.integrated.shell.windows","terminal.integrated.shellArgs.windows","terminal.integrated.macOptionIsMeta","terminal.integrated.macOptionClickForcesSelection","terminal.integrated.copyOnSelection","terminal.integrated.drawBoldTextInBrightColors","terminal.integrated.fontFamily","terminal.integrated.fontSize","terminal.integrated.letterSpacing","terminal.integrated.lineHeight","terminal.integrated.fontWeight","terminal.integrated.fontWeightBold","terminal.integrated.cursorBlinking","terminal.integrated.cursorStyle","terminal.integrated.scrollback","terminal.integrated.setLocaleVariables","terminal.integrated.rendererType","terminal.integrated.rightClickBehavior","terminal.integrated.cwd","terminal.integrated.confirmOnExit","terminal.integrated.enableBell","terminal.integrated.commandsToSkipShell","terminal.integrated.env.osx","terminal.integrated.env.linux","terminal.integrated.env.windows","terminal.integrated.showExitAlert","terminal.integrated.experimentalBufferImpl","terminal.integrated.splitCwd","keyboard.dispatch","extensions.autoUpdate","extensions.autoCheckUpdates","extensions.ignoreRecommendations","extensions.showRecommendationsOnlyOnDemand","extensions.closeExtensionDetailsOnViewChange","terminal.explorerKind","terminal.external.windowsExec","terminal.external.osxExec","terminal.external.linuxExec","css.validate","css.colorDecorators.enable","css.lint.compatibleVendorPrefixes","css.lint.vendorPrefix","css.lint.duplicateProperties","css.lint.emptyRules","css.lint.importStatement","css.lint.boxModel","css.lint.universalSelector","css.lint.zeroUnits","css.lint.fontFaceProperties","css.lint.hexColorLength","css.lint.argumentsInColorFunction","css.lint.unknownProperties","css.lint.validProperties","css.lint.ieHack","css.lint.unknownVendorSpecificProperties","css.lint.propertyIgnoredDueToDisplay","css.lint.important","css.lint.float","css.lint.idSelector","css.lint.unknownAtRules","css.trace.server","scss.validate","scss.colorDecorators.enable","scss.lint.compatibleVendorPrefixes","scss.lint.vendorPrefix","scss.lint.duplicateProperties","scss.lint.emptyRules","scss.lint.importStatement","scss.lint.boxModel","scss.lint.universalSelector","scss.lint.zeroUnits","scss.lint.fontFaceProperties","scss.lint.hexColorLength","scss.lint.argumentsInColorFunction","scss.lint.unknownProperties","scss.lint.validProperties","scss.lint.ieHack","scss.lint.unknownVendorSpecificProperties","scss.lint.propertyIgnoredDueToDisplay","scss.lint.important","scss.lint.float","scss.lint.idSelector","less.validate","less.colorDecorators.enable","less.lint.compatibleVendorPrefixes","less.lint.vendorPrefix","less.lint.duplicateProperties","less.lint.emptyRules","less.lint.importStatement","less.lint.boxModel","less.lint.universalSelector","less.lint.zeroUnits","less.lint.fontFaceProperties","less.lint.hexColorLength","less.lint.argumentsInColorFunction","less.lint.unknownProperties","less.lint.validProperties","less.lint.ieHack","less.lint.unknownVendorSpecificProperties","less.lint.propertyIgnoredDueToDisplay","less.lint.important","less.lint.float","less.lint.idSelector","debug.node.autoAttach","emmet.showExpandedAbbreviation","emmet.showAbbreviationSuggestions","emmet.includeLanguages","emmet.variables","emmet.syntaxProfiles","emmet.excludeLanguages","emmet.extensionsPath","emmet.triggerExpansionOnTab","emmet.preferences","emmet.showSuggestionsAsSnippets","emmet.optimizeStylesheetParsing","git.enabled","git.path","git.autoRepositoryDetection","git.autorefresh","git.autofetch","git.branchValidationRegex","git.branchWhitespaceChar","git.confirmSync","git.countBadge","git.checkoutType","git.ignoreLegacyWarning","git.ignoreMissingGitWarning","git.ignoreLimitWarning","git.defaultCloneDirectory","git.enableSmartCommit","git.enableCommitSigning","git.confirmEmptyCommits","git.decorations.enabled","git.promptToSaveFilesBeforeCommit","git.showInlineOpenFileAction","git.showPushSuccessNotification","git.inputValidation","git.inputValidationLength","git.detectSubmodules","git.detectSubmodulesLimit","git.alwaysShowStagedChangesResourceGroup","git.alwaysSignOff","git.ignoredRepositories","git.scanRepositories","git.showProgress","git.rebaseWhenSync","git.fetchOnPull","git.allowForcePush","git.useForcePushWithLease","git.confirmForcePush","grunt.autoDetect","gulp.autoDetect","html.format.enable","html.format.wrapLineLength","html.format.unformatted","html.format.contentUnformatted","html.format.indentInnerHtml","html.format.preserveNewLines","html.format.maxPreserveNewLines","html.format.indentHandlebars","html.format.endWithNewline","html.format.extraLiners","html.format.wrapAttributes","html.suggest.angular1","html.suggest.ionic","html.suggest.html5","html.validate.scripts","html.validate.styles","html.autoClosingTags","html.trace.server","jake.autoDetect","json.schemas","json.format.enable","json.trace.server","json.colorDecorators.enable","markdown.styles","markdown.previewFrontMatter","markdown.preview.breaks","markdown.preview.linkify","markdown.preview.fontFamily","markdown.preview.fontSize","markdown.preview.lineHeight","markdown.preview.scrollPreviewWithEditor","markdown.preview.scrollPreviewWithEditorSelection","markdown.preview.markEditorSelection","markdown.preview.scrollEditorWithPreview","markdown.preview.doubleClickToSwitchToEditor","markdown.preview.openMarkdownLinks","markdown.trace","merge-conflict.codeLens.enabled","merge-conflict.decorators.enabled","merge-conflict.autoNavigateNextConflict.enabled","npm.autoDetect","npm.runSilent","npm.packageManager","npm.exclude","npm.enableScriptExplorer","npm.scriptExplorerAction","npm.fetchOnlinePackageInfo","php.suggest.basic","php.validate.enable","php.validate.executablePath","php.validate.run","typescript.tsdk","typescript.disableAutomaticTypeAcquisition","typescript.npm","typescript.check.npmIsInstalled","javascript.referencesCodeLens.enabled","typescript.referencesCodeLens.enabled","typescript.implementationsCodeLens.enabled","typescript.tsserver.log","typescript.tsserver.pluginPaths","typescript.tsserver.trace","javascript.suggest.completeFunctionCalls","typescript.suggest.completeFunctionCalls","typescript.reportStyleChecksAsWarnings","typescript.validate.enable","typescript.format.enable","typescript.format.insertSpaceAfterCommaDelimiter","typescript.format.insertSpaceAfterConstructor","typescript.format.insertSpaceAfterSemicolonInForStatements","typescript.format.insertSpaceBeforeAndAfterBinaryOperators","typescript.format.insertSpaceAfterKeywordsInControlFlowStatements","typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions","typescript.format.insertSpaceBeforeFunctionParenthesis","typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces","typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces","typescript.format.insertSpaceAfterTypeAssertion","typescript.format.placeOpenBraceOnNewLineForFunctions","typescript.format.placeOpenBraceOnNewLineForControlBlocks","javascript.validate.enable","javascript.format.enable","javascript.format.insertSpaceAfterCommaDelimiter","javascript.format.insertSpaceAfterConstructor","javascript.format.insertSpaceAfterSemicolonInForStatements","javascript.format.insertSpaceBeforeAndAfterBinaryOperators","javascript.format.insertSpaceAfterKeywordsInControlFlowStatements","javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions","javascript.format.insertSpaceBeforeFunctionParenthesis","javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces","javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces","javascript.format.placeOpenBraceOnNewLineForFunctions","javascript.format.placeOpenBraceOnNewLineForControlBlocks","jsDocCompletion.enabled","javascript.implicitProjectConfig.checkJs","javascript.implicitProjectConfig.experimentalDecorators","javascript.suggest.names","typescript.tsc.autoDetect","javascript.suggest.paths","typescript.suggest.paths","javascript.suggest.autoImports","typescript.suggest.autoImports","typescript.locale","javascript.suggestionActions.enabled","typescript.suggestionActions.enabled","javascript.preferences.quoteStyle","typescript.preferences.quoteStyle","javascript.preferences.importModuleSpecifier","typescript.preferences.importModuleSpecifier","typescript.updateImportsOnFileMove.enabled","javascript.updateImportsOnFileMove.enabled","typescript.autoClosingTags","javascript.autoClosingTags","javascript.suggest.enabled","typescript.suggest.enabled","typescript.surveys.enabled","C_Cpp.clang_format_path","C_Cpp.clang_format_style","C_Cpp.clang_format_fallbackStyle","C_Cpp.clang_format_sortIncludes","C_Cpp.intelliSenseEngine","C_Cpp.intelliSenseEngineFallback","C_Cpp.autocomplete","C_Cpp.errorSquiggles","C_Cpp.dimInactiveRegions","C_Cpp.inactiveRegionOpacity","C_Cpp.inactiveRegionForegroundColor","C_Cpp.inactiveRegionBackgroundColor","C_Cpp.formatting","C_Cpp.navigation.length","C_Cpp.loggingLevel","C_Cpp.autoAddFileAssociations","C_Cpp.workspaceParsingPriority","C_Cpp.workspaceSymbols","C_Cpp.exclusionPolicy","C_Cpp.preferredPathSeparator","C_Cpp.commentContinuationPatterns","C_Cpp.configurationWarnings","C_Cpp.default.includePath","C_Cpp.default.defines","C_Cpp.default.macFrameworkPath","C_Cpp.default.windowsSdkVersion","C_Cpp.default.compileCommands","C_Cpp.default.forcedInclude","C_Cpp.default.intelliSenseMode","C_Cpp.default.compilerPath","C_Cpp.default.cStandard","C_Cpp.default.cppStandard","C_Cpp.default.configurationProvider","C_Cpp.default.browse.path","C_Cpp.default.browse.databaseFilename","C_Cpp.default.browse.limitSymbolsToIncludedHeaders","C_Cpp.default.systemIncludePath","C_Cpp.updateChannel","material-icon-theme.showWelcomeMessage","material-icon-theme.showUpdateMessage","material-icon-theme.showReloadMessage","material-icon-theme.activeIconPack","material-icon-theme.files.associations","material-icon-theme.folders.associations","material-icon-theme.languages.associations","material-icon-theme.folders.theme","material-icon-theme.folders.color","material-icon-theme.opacity","material-icon-theme.hidesExplorerArrows","cmake.cmakePath","cmake.buildDirectory","cmake.installPrefix","cmake.sourceDirectory","cmake.saveBeforeBuild","cmake.buildBeforeRun","cmake.clearOutputBeforeBuild","cmake.configureSettings","cmake.cacheInit","cmake.preferredGenerators","cmake.generator","cmake.toolset","cmake.platform","cmake.configureArgs","cmake.buildArgs","cmake.buildToolArgs","cmake.parallelJobs","cmake.ctestPath","cmake.ctest.parallelJobs","cmake.autoRestartBuild","cmake.parseBuildDiagnostics","cmake.enabledOutputParsers","cmake.debugConfig","cmake.defaultVariants","cmake.ctestArgs","cmake.environment","cmake.configureEnvironment","cmake.buildEnvironment","cmake.testEnvironment","cmake.mingwSearchDirs","cmake.emscriptenSearchDirs","cmake.copyCompileCommands","cmake.configureOnOpen","cmake.useCMakeServer","cmake.enableTraceLogging","cmake.loggingLevel","[git-commit]","[go]","[json]","[makefile]","[markdown]","[yaml]","[cpp]","[c]"]},"user":{"contents":{"workbench":{"iconTheme":"material-icon-theme","startupEditor":"newUntitledFile"},"C_Cpp":{"default":{"includePath":["/home/andrei/.nix-profile/include"]}},"cmake":{"configureOnOpen":true}},"overrides":[],"keys":["workbench.iconTheme","workbench.startupEditor","C_Cpp.default.includePath","cmake.configureOnOpen"]},"workspace":{"contents":{"files":{"associations":{"iostream":"cpp"}}},"overrides":[],"keys":["files.associations"]},"folders":{"file:///home/andrei/project":{"contents":{"files":{"associations":{"iostream":"cpp"}}},"overrides":[],"keys":["files.associations"]}},"isComplete":true,"configurationScopes":{}},"telemetryInfo":{"sessionId":"95c1e1b8-747b-4932-af43-320dc9fb5fb91542647682769","instanceId":"2eebe118-f717-4bd0-8b18-10c41ab0428b","machineId":"db24ebc8-3ebd-43a0-8d62-f157602e348e"},"logLevel":0,"logsLocation":{"$mid":1,"fsPath":"/home/andrei/.config/Code/logs/20181119T171441/exthost1","path":"/home/andrei/.config/Code/logs/20181119T171441/exthost1","scheme":"file"}}
[2018-11-19 17:14:43.309] [exthost] [trace] ExtHostCommands#registerCommand _internal_command_delegation_1542647683309
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeWorkspaceSymbolProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeDefinitionProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeTypeDefinitionProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeImplementationProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeHoverProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeDocumentHighlights
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeReferenceProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeDocumentRenameProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeSignatureHelpProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeDocumentSymbolProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeCompletionItemProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeCodeActionProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeCodeLensProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeFormatDocumentProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeFormatRangeProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeFormatOnTypeProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeLinkProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeDocumentColorProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.executeColorPresentationProvider
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.previewHtml
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.openFolder
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.diff
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.open
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.removeFromRecentlyOpened
[2018-11-19 17:14:43.315] [exthost] [trace] ExtHostCommands#registerCommand vscode.setEditorLayout
[2018-11-19 17:14:43.325] [exthost] [info] ExtensionService#_doActivateExtension vscode.debug-auto-launch {"startup":true,"activationEvent":"*"}
[2018-11-19 17:14:43.325] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/debug-auto-launch/dist/extension
[2018-11-19 17:14:43.329] [exthost] [trace] ExtensionService#loadExtensionContext vscode.debug-auto-launch
[2018-11-19 17:14:43.329] [exthost] [info] ExtensionService#_doActivateExtension vscode.emmet {"startup":true,"activationEvent":"*"}
[2018-11-19 17:14:43.329] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/emmet/dist/extension
[2018-11-19 17:14:43.344] [exthost] [trace] ExtensionService#loadExtensionContext vscode.emmet
[2018-11-19 17:14:43.344] [exthost] [info] ExtensionService#_doActivateExtension vscode.git {"startup":true,"activationEvent":"*"}
[2018-11-19 17:14:43.344] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/git/dist/main
[2018-11-19 17:14:43.436] [exthost] [trace] ExtensionService#loadExtensionContext vscode.git
[2018-11-19 17:14:43.436] [exthost] [info] ExtensionService#_doActivateExtension vscode.merge-conflict {"startup":true,"activationEvent":"*"}
[2018-11-19 17:14:43.436] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/merge-conflict/dist/extension
[2018-11-19 17:14:43.440] [exthost] [trace] ExtensionService#loadExtensionContext vscode.merge-conflict
[2018-11-19 17:14:43.441] [exthost] [info] ExtensionService#_doActivateExtension PKief.material-icon-theme {"startup":true,"activationEvent":"*"}
[2018-11-19 17:14:43.441] [exthost] [info] ExtensionService#loadCommonJSModule /home/andrei/.vscode/extensions/pkief.material-icon-theme-3.6.0/out/src/extension
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.activateIcons
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.toggleIconPacks
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.changeFolderTheme
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.changeFolderColor
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.restoreDefaultConfig
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.hidesExplorerArrows
[2018-11-19 17:14:43.468] [exthost] [trace] ExtHostCommands#registerCommand material-icon-theme.opacity
[2018-11-19 17:14:43.471] [exthost] [trace] ExtensionService#loadExtensionContext PKief.material-icon-theme
[2018-11-19 17:14:43.472] [exthost] [trace] extensionHostMain#activateIfGlobPatterns: fileSearch, extension: ms-vscode.cpptools, entryPoint: workspaceContains
[2018-11-19 17:14:43.472] [exthost] [trace] extensionHostMain#activateIfGlobPatterns: fileSearch, extension: vector-of-bool.cmake-tools, entryPoint: workspaceContains
[2018-11-19 17:14:43.473] [exthost] [info] ExtensionService#_doActivateExtension ms-vscode.cpptools {"startup":false,"activationEvent":"onLanguage:cpp"}
[2018-11-19 17:14:43.473] [exthost] [info] ExtensionService#loadCommonJSModule /home/andrei/.vscode/extensions/ms-vscode.cpptools-0.20.1/out/src/main
[2018-11-19 17:14:43.565] [exthost] [trace] ExtensionService#loadExtensionContext ms-vscode.cpptools
[2018-11-19 17:14:43.582] [exthost] [info] ExtensionService#_doActivateExtension vector-of-bool.cmake-tools {"startup":true,"activationEvent":"workspaceContains:CMakeLists.txt"}
[2018-11-19 17:14:43.582] [exthost] [info] ExtensionService#loadCommonJSModule /home/andrei/.vscode/extensions/vector-of-bool.cmake-tools-1.1.2/out/src/extension
[2018-11-19 17:14:43.740] [exthost] [trace] ExtensionService#loadExtensionContext vector-of-bool.cmake-tools
[2018-11-19 17:14:43.740] [exthost] [info] ExtensionService#_doActivateExtension vscode.configuration-editing {"startup":false,"activationEvent":"onLanguage:json"}
[2018-11-19 17:14:43.740] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/configuration-editing/dist/extension
[2018-11-19 17:14:43.746] [exthost] [trace] ExtensionService#loadExtensionContext vscode.configuration-editing
[2018-11-19 17:14:43.746] [exthost] [info] ExtensionService#_doActivateExtension vscode.extension-editing {"startup":false,"activationEvent":"onLanguage:json"}
[2018-11-19 17:14:43.746] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/extension-editing/dist/extension
[2018-11-19 17:14:43.777] [exthost] [trace] ExtensionService#loadExtensionContext vscode.extension-editing
[2018-11-19 17:14:43.777] [exthost] [info] ExtensionService#_doActivateExtension vscode.json-language-features {"startup":false,"activationEvent":"onLanguage:json"}
[2018-11-19 17:14:43.777] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/json-language-features/client/dist/jsonMain
[2018-11-19 17:14:43.821] [exthost] [trace] ExtensionService#loadExtensionContext vscode.json-language-features
[2018-11-19 17:14:43.821] [exthost] [info] ExtensionService#_doActivateExtension vscode.npm {"startup":false,"activationEvent":"onLanguage:json"}
[2018-11-19 17:14:43.821] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/npm/dist/main
[2018-11-19 17:14:43.837] [exthost] [trace] ExtensionService#loadExtensionContext vscode.npm
[2018-11-19 17:14:43.837] [exthost] [info] ExtensionService#_doActivateExtension vscode.css-language-features {"startup":false,"activationEvent":"onLanguage:css"}
[2018-11-19 17:14:43.837] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/css-language-features/client/dist/cssMain
[2018-11-19 17:14:43.862] [exthost] [trace] ExtensionService#loadExtensionContext vscode.css-language-features
[2018-11-19 17:14:43.862] [exthost] [info] ExtensionService#_doActivateExtension vscode.typescript-language-features {"startup":false,"activationEvent":"onLanguage:typescript"}
[2018-11-19 17:14:43.862] [exthost] [info] ExtensionService#loadCommonJSModule /nix/store/z7ls0nib9nh7gg1gzm516vql45yq6wn8-vscode-1.29.0/lib/vscode/resources/app/extensions/typescript-language-features/dist/extension
[2018-11-19 17:14:43.904] [exthost] [trace] ExtensionService#loadExtensionContext vscode.typescript-language-features
[2018-11-19 17:14:43.908] [exthost] [trace] ExtensionService#_callActivateOptional vscode.debug-auto-launch
[2018-11-19 17:14:43.908] [exthost] [trace] ExtHostCommands#registerCommand extension.node-debug.toggleAutoAttach
[2018-11-19 17:14:43.908] [exthost] [trace] ExtensionService#_callActivateOptional vscode.emmet
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.wrapWithAbbreviation
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.wrapIndividualLinesWithAbbreviation
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand emmet.expandAbbreviation
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.removeTag
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.updateTag
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.matchTag
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.balanceOut
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.balanceIn
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.splitJoinTag
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.mergeLines
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.toggleComment
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.nextEditPoint
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.prevEditPoint
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.selectNextItem
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.selectPrevItem
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.evaluateMathExpression
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByOneTenth
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByOne
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.incrementNumberByTen
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByOneTenth
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByOne
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.decrementNumberByTen
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.updateImageSize
[2018-11-19 17:14:43.909] [exthost] [trace] ExtHostCommands#registerCommand editor.emmet.action.reflectCSSValue
[2018-11-19 17:14:43.910] [exthost] [trace] ExtensionService#_callActivateOptional vscode.git
[2018-11-19 17:14:43.910] [exthost] [trace] ExtHostCommands#registerCommand git.showOutput
[2018-11-19 17:14:43.913] [exthost] [trace] ExtensionService#_callActivateOptional vscode.merge-conflict
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.current
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.incoming
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.selection
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.both
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-current
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-incoming
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.accept.all-both
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.next
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.previous
[2018-11-19 17:14:43.914] [exthost] [trace] ExtHostCommands#registerCommand merge-conflict.compare
[2018-11-19 17:14:43.915] [exthost] [trace] ExtensionService#_callActivateOptional PKief.material-icon-theme
[2018-11-19 17:14:43.915] [exthost] [trace] ExtensionService#_callActivateOptional ms-vscode.cpptools
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationEdit
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationSelect
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationProviderSelect
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.SwitchHeaderSource
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.Navigate
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.GoToDeclaration
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.PeekDeclaration
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleErrorSquiggles
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleIncludeFallback
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleDimInactiveRegions
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleSnippets
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ShowReleaseNotes
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ResetDatabase
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.PauseParsing
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ResumeParsing
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ShowParsingCommands
[2018-11-19 17:14:43.916] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.TakeSurvey
[2018-11-19 17:14:43.918] [exthost] [trace] ExtHostCommands#registerCommand extension.pickNativeProcess
[2018-11-19 17:14:43.919] [exthost] [trace] ExtHostCommands#registerCommand extension.pickRemoteNativeProcess
[2018-11-19 17:14:43.920] [exthost] [trace] ExtHostCommands#registerCommand extension.cppdbgAdapterExecutableCommand
[2018-11-19 17:14:43.920] [exthost] [trace] ExtHostCommands#registerCommand extension.cppvsdbgAdapterExecutableCommand
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.Navigate
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.GoToDeclaration
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.PeekDeclaration
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.SwitchHeaderSource
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ResetDatabase
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationSelect
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationProviderSelect
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ConfigurationEdit
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.AddToIncludePath
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleErrorSquiggles
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleSnippets
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleIncludeFallback
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ToggleDimInactiveRegions
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ShowReleaseNotes
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.PauseParsing
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ResumeParsing
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.ShowParsingCommands
[2018-11-19 17:14:43.974] [exthost] [trace] ExtHostCommands#registerCommand C_Cpp.TakeSurvey
[2018-11-19 17:14:43.980] [exthost] [trace] ExtensionService#_callActivateOptional vector-of-bool.cmake-tools
[2018-11-19 17:14:43.983] [exthost] [trace] ExtHostCommands#executeCommand setContext
[2018-11-19 17:14:43.983] [exthost] [trace] ExtensionService#_callActivateOptional vscode.configuration-editing
[2018-11-19 17:14:43.984] [exthost] [trace] ExtHostCommands#getCommands true
[2018-11-19 17:14:43.984] [exthost] [trace] ExtensionService#_callActivateOptional vscode.extension-editing
[2018-11-19 17:14:43.985] [exthost] [trace] ExtensionService#_callActivateOptional vscode.json-language-features
[2018-11-19 17:14:43.993] [exthost] [trace] ExtensionService#_callActivateOptional vscode.npm
[2018-11-19 17:14:43.993] [exthost] [trace] ExtHostCommands#registerCommand npm.runScript
[2018-11-19 17:14:43.993] [exthost] [trace] ExtHostCommands#registerCommand npm.debugScript
[2018-11-19 17:14:43.993] [exthost] [trace] ExtHostCommands#registerCommand npm.openScript
[2018-11-19 17:14:43.993] [exthost] [trace] ExtHostCommands#registerCommand npm.refresh
[2018-11-19 17:14:43.993] [exthost] [trace] ExtHostCommands#registerCommand npm.runInstall
[2018-11-19 17:14:43.994] [exthost] [trace] ExtHostCommands#registerCommand npm.runScriptFromHover
[2018-11-19 17:14:43.994] [exthost] [trace] ExtHostCommands#registerCommand npm.debugScriptFromHover
[2018-11-19 17:14:43.994] [exthost] [trace] ExtHostCommands#registerCommand npm.runSelectedScript
[2018-11-19 17:14:43.994] [exthost] [trace] ExtensionService#_callActivateOptional vscode.css-language-features
[2018-11-19 17:14:43.999] [exthost] [trace] ExtHostCommands#registerCommand _css.applyCodeAction
[2018-11-19 17:14:43.999] [exthost] [trace] ExtensionService#_callActivateOptional vscode.typescript-language-features
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand typescript.reloadProjects
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand javascript.reloadProjects
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand typescript.selectTypeScriptVersion
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand typescript.openTsServerLog
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand typescript.restartTsServer
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand typescript.goToProjectConfig
[2018-11-19 17:14:44.000] [exthost] [trace] ExtHostCommands#registerCommand javascript.goToProjectConfig
[2018-11-19 17:14:44.001] [exthost] [trace] ExtHostCommands#registerCommand _typescript.configurePlugin
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#executeCommand setContext
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.refresh
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openResource
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.clone
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.init
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openRepository
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.close
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openFile
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openFile2
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openHEADFile
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.openChange
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.stage
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.stageAll
[2018-11-19 17:14:44.027] [exthost] [trace] ExtHostCommands#registerCommand git.stageChange
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.stageSelectedRanges
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.revertChange
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.revertSelectedRanges
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.unstage
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.unstageAll
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.unstageSelectedRanges
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.clean
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.cleanAll
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commit
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitWithInput
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitStaged
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitStagedSigned
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitStagedAmend
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitAll
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitAllSigned
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitAllAmend
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.commitEmpty
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.restoreCommitTemplate
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.undoCommit
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.checkout
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.branch
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.deleteBranch
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.renameBranch
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.merge
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.createTag
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.fetch
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.fetchAll
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pullFrom
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pull
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pullRebase
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.push
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pushForce
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pushWithTags
[2018-11-19 17:14:44.028] [exthost] [trace] ExtHostCommands#registerCommand git.pushWithTagsForce
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.pushTo
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.pushToForce
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.sync
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git._syncAll
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.syncRebase
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.publish
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.ignore
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stash
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stashIncludeUntracked
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stashPop
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stashPopLatest
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stashApply
[2018-11-19 17:14:44.029] [exthost] [trace] ExtHostCommands#registerCommand git.stashApplyLatest
[2018-11-19 17:14:44.203] [exthost] [trace] ExtHostCommands#registerCommand cmake.editKits
[2018-11-19 17:14:44.203] [exthost] [trace] ExtHostCommands#registerCommand cmake.scanForKits
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.selectKit
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.cleanConfigure
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.configure
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.build
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.setVariant
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.install
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.editCache
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.clean
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.cleanRebuild
[2018-11-19 17:14:44.204] [exthost] [trace] ExtHostCommands#registerCommand cmake.buildWithTarget
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.setDefaultTarget
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.ctest
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.stop
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.quickStart
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.launchTargetPath
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.debugTarget
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.launchTarget
[2018-11-19 17:14:44.205] [exthost] [trace] ExtHostCommands#registerCommand cmake.selectLaunchTarget
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.resetState
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.viewLog
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.compileFile
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.configure
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.build
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.stop
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.clean
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.cleanConfigure
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.cleanRebuild
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.buildTarget
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.runUtilityTarget
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.debugTarget
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.launchTarget
[2018-11-19 17:14:44.206] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.setDefaultTarget
[2018-11-19 17:14:44.207] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.setLaunchTarget
[2018-11-19 17:14:44.207] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.revealInCMakeLists
[2018-11-19 17:14:44.207] [exthost] [trace] ExtHostCommands#registerCommand cmake.outline.compileFile
[2018-11-19 17:14:44.207] [exthost] [info] eager extensions activated
[2018-11-19 17:14:44.234] [exthost] [trace] ExtHostCommands#registerCommand _json.retryResolveSchema
